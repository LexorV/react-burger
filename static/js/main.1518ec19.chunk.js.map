{"version":3,"sources":["pages/autchFormStyle.module.css","pages/profile/profile.module.css","pages/feed/feed.module.css","components/AppHeader/AppHeader.tsx","services/hooks.ts","utils/utils.ts","services/constants.ts","utils/burgerApi.ts","services/action/Ingredients.ts","services/action/registerForm.ts","pages/LoginForm/LoginForm.tsx","pages/registerForm/RegisterForm.tsx","pages/forgot-passwordForm/ForgotPassword.tsx","pages/reset-passwordForm/ResetPasswordForm.tsx","pages/profile/ProfileMenu.tsx","pages/profile/Profile.tsx","services/action/IngredientDetail.ts","components/BurgerIngredients/BurgerIngredients.tsx","images/done.png","components/OrderDetails/OrderDetails.tsx","components/ModalOverlay/ModalOverlay.tsx","components/Modal/Modal.tsx","services/action/constructorArray.ts","services/action/order.ts","components/BurgerConstructor/BurgerConstructor.tsx","components/MainBlock/MainBlock.tsx","pages/ProtectedRoute.tsx","components/IngredientDetails/IngredientDetails.tsx","pages/NotFound/NotFound.tsx","pages/feed/feedOrderStatistics.tsx","services/action/orderCard.ts","components/OrdesCards/OrderCard.tsx","components/OrdesCards/listCardOrder.tsx","services/action/wsOrdes.ts","pages/feed/feed.tsx","components/OrdesCards/DetailsOrder.tsx","pages/profile/HistoryOrdes.tsx","components/App/App.tsx","reportWebVitals.ts","services/middleware/socketMiddleware.ts","services/reducers/Ingredients.ts","services/reducers/IngredientDetail.ts","services/reducers/constructorArray.ts","services/reducers/oreder.ts","services/reducers/registerForm.ts","services/reducers/wsOrders.ts","services/reducers/index.ts","services/store.ts","index.tsx","components/BurgerIngredients/burgerIngredients.module.css","components/IngredientDetails/ingredientDetails.module.css","components/AppHeader/appHeader.module.css","components/BurgerConstructor/burgerConstructor.module.css","components/OrderDetails/orderDetails.module.css","components/Modal/modal.module.css","components/OrdesCards/cardsOrders.module.css","components/MainBlock/mainBlock.module.css","components/ModalOverlay/modalOverlay.module.css"],"names":["module","exports","AppHeader","useState","iconActiveConst","setIconActiveConst","iconActiveRibbon","seticonActiveRibbon","iconActiveFeed","setIconActiveFeed","setActive","isActive","headerStyle","link_style_active","link_style","className","header","menu","menu_link","type","onClick","to","logo_box","useDispatch","dispatchHook","useSelector","selectorHook","setCookie","name","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","ingredientsType","orderDateChange","date","earlier","now","hours","getHours","toString","minutes","getMinutes","padStart","timeZone","Intl","NumberFormat","signDisplay","format","getTimezoneOffset","daysNumber","Math","floor","days","ordesCardFilter","ordersCard","ingredients","orderArrayWitchNumber","map","el","result4","element","number","reduce","a","b","id","filter","includes","_id","result","find","e","totalCardOrder","cardOrder","price","numberIngred","sum","current","urlServ","urlWebSoketFeed","urlWebSoketHistory","token","checkResponse","res","ok","json","then","err","Promise","reject","sendRegisterUser","userDataRegister","fetch","method","headers","Headers","body","JSON","stringify","autchUser","forgotPasswordApi","resetPasswordApi","getProfileData","sendProfileData","changeDataProfile","refreshTokenApi","localStorage","getItem","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","getIngredsFailed","getIngredientsAction","dispatch","success","data","catch","CHANGE_REGISTER_FORM_VALUE","REGISTER_FORM_SUBMIT","REGISTER_FORM_SUBMIT_SUCCESS","REGISTER_FORM_SUBMIT_FAILED","LOGOUT_USER","fORGOT_FORM_SUBMIT","fORGOT_FORM_SUCCESS","fORGOT_FORM_FAILED","fORGOT_FORM_CLEANING","RESET_FORM_SUBMIT","RESET_fORM_SUCCESS","RESET_fORM_FAILED","RESET_fORM_CLEANING","GLOBAL_CLEANING_FORM","setRegisterFormValue","field","register","sendApi","tokenData","forgotPassword","forgotFormSuccess","resetPassword","LoginForm","passwordState","setPasswordState","state","registrationForm","email","password","registerReceivedData","registrationFailed","navigate","useNavigate","location","useLocation","useEffect","accessToken","split","setItem","refreshToken","from","registerSend","onFormChange","target","autchFormStyle","main","onSubmit","preventDefault","box_form","size","placeholder","errorText","onChange","icon","onIconClick","box_register","link","RegisterForm","ForgotPasswordForm","emailForgot","forgotSuccess","validErrosText","setValidErrosText","isValid","setIsvalid","fieldName","setErrosText","stateValid","setStateValid","checkValid","length","validateField","ResetPasswordForm","emailCode","resetSuccess","ProfileMenu","profile","links__profile_menu_active","links__profile_menu","menu__box","menu__lists","menu__list","end","removeItem","Profile","emailUser","setEmailUser","nameUser","setNameUser","passwordUser","setPaswordUser","isLogin","setIslogin","postUserData","user","console","log","message","main__box","inputs__box","button__box","OPEN_INGREDIENT_DETAILS","CLOSE_INGREDIENT_DETAILS","Ingredient","ingredient","setModalIsOpen","image","useDrag","item","dragRef","countIngredient","arrayInConstructor","arrayID","burgerIngredientsStyle","liks_style","pathname","positionPopap","ref","onClickCapture","card_list","count","alt","src","picture","card_price_box","Ingredients","ingtrdient","BurgerIngredients","React","setCurrent","bun","useRef","sauce","tabClick","scrollIntoView","block","behavior","style","display","active","onScroll","scrollTop","handleScroll","box_with_ingredients","lists","OrderDetails","order","orderDetailsStyles","position_center","done","ModalOverlay","ingredientDetail","modalOpen","currentTarget","closeModal","modalOverlayStyle","modal_overlay","children","Modal","handleEscClose","key","addEventListener","removeEventListener","getElementById","createPortal","modalStyle","modal_container","height","modal_container_height_539","modal_container_height_718","modal_btn_close","ADD_INGREDIENT","DELETE_INGREDIENT","SORT_INGERDIENTS","DELETE_BUN","CLEAR_CONSTRUCTOR","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","ORDER_CLEANING","OPEN_ORDER_MODAL","getOrderFailed","sendOrderAction","arryId","orederNumber","ConstructorIngredient","index","DropDragRef","collect","monitor","isDrag","isDragging","useDrop","accept","drop","dragIndex","dropIndex","dropIngred","burgerConstructorStyle","open_elements_box","isLocked","handleClose","thumbnail","text","IngredientsInConstructorLock","ingredientsInConstructor","positionEn","position","arrayBun","lock_elements","IngredientsInConstructor","uuidv4","BurgerConstructor","commonPrice","setCommonPrice","orderNumberFailed","orederNumberRequest","bunInArray","arrayId","acc","dropTarget","constructor","open_elements","price_container","price_text","MainBlock","mainBlockStyle","ProtectedRoute","IngredientDetails","dataIngrid","setDataingrid","urlIdData","useParams","ingredientDetailsStyles","title","сomposition","сomposition_list_box","calories","proteins","fat","carbohydrates","NotFound","OrdesDoneList","orders","wsOrdes","ordersTemp","setOrdesTemp","tempOrder","status","slice","filterDoneOrder","feedStyle","statistics__number_list","statistics__number","OrdesNotDoneList","FeedOrderStatistics","statistics","statistics__number_order","statistics__number_box","statistics__number_lists","total","totalToday","OPEN_ORDER_CARD","CLOSE_ORDER_CARD","ListPicture","pictureArray","cardsOrdersStyle","card__picture","zIndex","OrderCard","ordesData","ingredientPictureArray","setIngredientPictureArray","ordesDate","setOrdesDate","numberMoreSix","setNumberMoreSix","totalCard","setTotalCard","isHistory","setIsHistory","ordersIngredient","addIngredientsOrder","createdAt","card__liks_style","orderCard","card","card__number_box","color","details_status_text","card__bottom_box","card__picture_box","card_picture_number_box","card_picture_last","card_picture_number_text","card__price_box","card__price","CardListOrder","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_SEND_MESSAGE","WS_CONNECTION_START","wsConnectionStart","payload","wsConnectionClosed","FeedListCardOrder","box_cards","card__list","Feed","feed","IngredientsInOrder","oderData","details_list_ingredient","details_ingredient_price_box","FeedDetailsOrder","ingredientsArray","setingredientsArray","details_main","details_main_popap","details_number_order","details_name","details_lists","details_bottom_box","details_box_price","HistoryOrdes","main__box_history","App","ingredientsRequest","ingredientsFailed","parse","window","sessionStorage","onbeforeunload","DndProvider","backend","HTML5Backend","path","wsActions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","registrationRequest","registrationSuccess","resetFailed","forgotFailed","wsConnected","error","rootReducer","combineReducers","action","uid","random","idConstr","concat","filterId","findIndex","splice","result2","result3","wsInit","wsSendMessage","onOpen","onClose","onError","onMessage","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","composeWithDevTools","applyMiddleware","thunk","store","socket","next","getState","WebSocket","onopen","event","onerror","onmessage","parsedData","restParsedData","onclose","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1518ec19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"autchFormStyle_main__tsiza\",\"box_form\":\"autchFormStyle_box_form__3HgZa\",\"box_register\":\"autchFormStyle_box_register__1Y2lr\",\"link\":\"autchFormStyle_link__1lElt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile_main__1qpzQ\",\"main__box\":\"profile_main__box__1MgCD\",\"main__box_history\":\"profile_main__box_history__3hAJ6\",\"menu__box\":\"profile_menu__box__3u5tM\",\"menu__lists\":\"profile_menu__lists__33nQz\",\"menu__list\":\"profile_menu__list__31NXe\",\"inputs__box\":\"profile_inputs__box__3MY6J\",\"menu__list_active\":\"profile_menu__list_active__17gDB\",\"button__box\":\"profile_button__box__28GZq\",\"card__list\":\"profile_card__list__ZUO3b\",\"links__profile_menu\":\"profile_links__profile_menu__3CvsS\",\"links__profile_menu_active\":\"profile_links__profile_menu_active__1Lk0A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"feed_feed__1ceFq\",\"card__list\":\"feed_card__list__ustoI\",\"box_cards\":\"feed_box_cards__2Q-WU\",\"statistics\":\"feed_statistics__1kLoR\",\"statistics__number_order\":\"feed_statistics__number_order__1HuSI\",\"statistics__number\":\"feed_statistics__number__2WtI0\",\"statistics__number_box\":\"feed_statistics__number_box__1H_1l\",\"statistics__number_lists\":\"feed_statistics__number_lists__2hE8A\",\"statistics__number_list\":\"feed_statistics__number_list__1zFDe\"};","import { BurgerIcon, Logo, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport headerStyle from './appHeader.module.css'\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { useState } from 'react'\r\nexport default function AppHeader() {\r\n    const [iconActiveConst, setIconActiveConst] = useState<'secondary' | 'primary'>('primary');\r\n    const [iconActiveRibbon, seticonActiveRibbon] = useState<'secondary' | 'primary'>('secondary');\r\n    const [iconActiveFeed, setIconActiveFeed] = useState<'secondary' | 'primary'>('secondary');\r\n    const setActive = ({ isActive }: any) =>\r\n        isActive ? `${headerStyle.link_style_active}\r\n    text text_type_main-default pl-2`:\r\n            `${headerStyle.link_style} text text_type_main-default pl-2`;\r\n    const activeConst = () => {\r\n        setIconActiveConst('primary');\r\n        seticonActiveRibbon('secondary')\r\n        setIconActiveFeed('secondary')\r\n    }\r\n    const activeRibbon = () => {\r\n        seticonActiveRibbon('primary');\r\n        setIconActiveConst('secondary');\r\n        setIconActiveFeed('secondary')\r\n    }\r\n    const activeFeed = () => {\r\n        setIconActiveFeed('primary');\r\n        setIconActiveConst('secondary');\r\n        seticonActiveRibbon('secondary')\r\n    }\r\n\r\n\r\n    return (\r\n        <header className={`${headerStyle.header} pt-4 pb-4`}>\r\n            <nav className={headerStyle.menu}>\r\n                <li className={`${headerStyle.menu_link} ${setActive} p-5`}>\r\n                    <BurgerIcon type={iconActiveConst} />\r\n                    <NavLink onClick={activeConst} to=\"/\" className={setActive}>Конструктор</NavLink>\r\n                </li>\r\n                <li className={`${headerStyle.menu_link} pl-2 p-5`}>\r\n                    <ListIcon type={iconActiveFeed} />\r\n                    <NavLink onClick={activeFeed} to=\"/feed\" className={setActive}>Лента заказов</NavLink>\r\n                </li>\r\n            </nav>\r\n            <Link to='/' className={`${headerStyle.logo_box} pr-30`}>\r\n                <Logo /></Link>\r\n            <div className={`${headerStyle.menu_link} ${setActive} p-5`} >\r\n                <ProfileIcon type={iconActiveRibbon} />\r\n                <NavLink onClick={activeRibbon} to=\"/profile\" className={setActive}>Личный кабинет</NavLink>\r\n            </div>\r\n        </header>\r\n\r\n    )\r\n}\r\n","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n  } from 'react-redux';\r\n  import { AppDispatch, RootState, AppThunk } from './types'\r\n  export const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\n  export const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n\r\n","export function setCookie(name: string, value: string | boolean, props: any) {\r\n    props = props || {};\r\n    let exp = props.expires;\r\n    if (typeof exp == 'number' && exp) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + exp * 1000);\r\n        exp = props.expires = d;\r\n    }\r\n    if (exp && exp.toUTCString) {\r\n        props.expires = exp.toUTCString();\r\n    }\r\n    value = encodeURIComponent(value);\r\n    let updatedCookie = name + '=' + value;\r\n    for (const propName in props) {\r\n        updatedCookie += '; ' + propName;\r\n        const propValue = props[propName];\r\n        if (propValue !== true) {\r\n            updatedCookie += '=' + propValue;\r\n        }\r\n    }\r\n    document.cookie = updatedCookie;\r\n}\r\nexport function getCookie(name: string) {\r\n    const matches = document.cookie.match(\r\n        new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\nexport function deleteCookie(name: string) {\r\n    setCookie(name, false, { expires: -1 });\r\n}\r\nexport function validateField(fieldName: 'email' | 'password', value: string, setErrosText: Function, stateValid: any, setStateValid: Function) {\r\n    let checkValid = stateValid\r\n    switch (fieldName) {\r\n        case 'email':\r\n            checkValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n            setErrosText(checkValid ? '' : 'Неправильный Email');\r\n            setStateValid(checkValid);\r\n            break;\r\n        case 'password':\r\n            checkValid = value.length >= 6;\r\n            setErrosText(checkValid ? '' : 'Слишком короткий пароль не менее, чем 6 символов');\r\n            setStateValid(checkValid);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\nexport const orderDateChange = (date: any) => {\r\n    const earlier = new Date(date);\r\n    const now = new Date();\r\n    const days = () => {\r\n        const daysNumber = Math.floor((now.getTime() - earlier.getTime()) / (60 * 60 * 24 * 1000));\r\n        let daysText = 'Нет Даты';\r\n        if (daysNumber === 0) {\r\n            daysText =  'Сегодня'\r\n        }\r\n        else if (daysNumber === 1) {\r\n            daysText =  'Вчера'\r\n        }\r\n        else if (daysNumber > 1) {\r\n            daysText =  `${daysNumber} ${daysNumber>1 && daysNumber<5?'дня':'дней'} назад`\r\n        }\r\n        else {\r\n            daysText =  'Нет Даты'\r\n        }\r\n        return daysText\r\n    }\r\n    const hours = earlier.getHours().toString();\r\n    const minutes = earlier.getMinutes().toString().padStart(2, '0');\r\n    const timeZone = new Intl.NumberFormat(\"ru-RU\", { signDisplay: \"exceptZero\" }).format(0 - earlier.getTimezoneOffset() / 60);\r\n    return `${days()}, ${hours}:${minutes} i-GMT${timeZone}`;\r\n};\r\nexport const ordesCardFilter = (ordersCard:any, ingredients:any) => {\r\n    const orderArrayWitchNumber = ordersCard.ingredients.map((el:any) => {\r\n        const result2 = ordersCard.ingredients.map((element:any) => {\r\n            let number = 0\r\n            number = element === el ? number + 1: number;\r\n            return number\r\n        })\r\n        const result4 = result2.reduce((a:any, b:any) => a + b)\r\n\r\n        return {id:el, number:result4 }\r\n    })\r\n    const ingredientsArrayCard = ingredients.filter((el:any) => ordersCard.ingredients.includes(el._id)).map((element:any) => {\r\n        const result = orderArrayWitchNumber.find((e:any) => e.id === element._id)\r\n        element['numberIngred'] =  result.number\r\n        return element\r\n    })\r\n    return ingredientsArrayCard\r\n}\r\nexport const totalCardOrder = (cardOrder:any) => {\r\nreturn cardOrder.map((el:any) => el.price * el.numberIngred).reduce((sum:any, current:any) => sum + current);\r\n}\r\n\r\n\r\n\r\n  /*\r\nvalidateForm() {\r\nthis.setState({formValid: this.state.emailValid &&\r\n                          this.state.passwordValid});\r\n}*/","export enum ingredientsType {\r\nbun = 'bun',\r\nmain = 'main',\r\nsauce = 'sauce'\r\n}","import { getCookie } from './utils'\r\nimport {\r\n    TsendRegisterUser,\r\n    TautchUser,\r\n    TforgotPasswordApi,\r\n    TresetPasswordApi,\r\n    TsendProfileData,\r\n    TlogoutUserApi\r\n} from '../services/types/autchType';\r\nconst urlServ = \"https://norma.nomoreparties.space/api/\";\r\nexport const urlWebSoketFeed = 'wss://norma.nomoreparties.space/orders/all';\r\nexport const urlWebSoketHistory = (token:any) => `wss://norma.nomoreparties.space/orders?token=${token}`\r\n\r\nconst checkResponse = (res: Response) => {\r\n    return res.ok ? res.json() : res.json().then((err: any) => Promise.reject(err));\r\n}\r\nexport const getIngredients = () => {\r\n\r\n    return fetch(`${urlServ}ingredients`)\r\n        .then(checkResponse)\r\n\r\n}\r\nexport const sendOrder = (ingredients: string[]) => {\r\n    return fetch(`${urlServ}orders`, {\r\n        method: 'POST',\r\n        headers: new Headers([\r\n            ['Content-Type', 'application/json'],\r\n            ['Authorization', `Bearer ${getCookie('accessToken')}`]\r\n        ]),\r\n        body: JSON.stringify({ 'ingredients': ingredients })\r\n    })\r\n        .then(checkResponse)\r\n\r\n}\r\n\r\n\r\n\r\nexport const sendRegisterUser = (userDataRegister: TsendRegisterUser) => {\r\n    return fetch(`${urlServ}auth/register`, {\r\n        method: 'POST',\r\n        headers: new Headers([\r\n            ['Content-Type', 'application/json'],\r\n        ]),\r\n        body: JSON.stringify(userDataRegister)\r\n    })\r\n        .then(checkResponse)\r\n}\r\n\r\nexport const autchUser = (userDataRegister: TautchUser) => {\r\n    return fetch(`${urlServ}auth/login`, {\r\n        method: 'POST',\r\n        headers: new Headers([\r\n            ['Content-Type', 'application/json'],\r\n        ]),\r\n        body: JSON.stringify(userDataRegister)\r\n    })\r\n        .then(checkResponse)\r\n}\r\nexport const checkTokenUserApi = () => {\r\n    fetch(`${urlServ}auth/user`, {\r\n        method: 'GET',\r\n        headers: new Headers([\r\n            ['Content-Type', 'application/json'],\r\n            ['Authorization', `Bearer ${getCookie('accessToken')}`]\r\n        ]),\r\n    })\r\n        .then(checkResponse)\r\n\r\n}\r\n\r\nexport const forgotPasswordApi = (userDataRegister: TforgotPasswordApi) => {\r\n    return fetch(`${urlServ}password-reset`, {\r\n        method: 'POST',\r\n        headers: new Headers([\r\n            ['Content-Type', 'application/json'],\r\n        ]),\r\n        body: JSON.stringify(userDataRegister)\r\n    })\r\n        .then(checkResponse)\r\n}\r\n\r\nexport const resetPasswordApi = (userDataRegister: TresetPasswordApi) => {\r\n    return fetch(`${urlServ}password-reset/reset`, {\r\n        method: 'POST',\r\n        headers: new Headers([\r\n            ['Content-Type', 'application/json'],\r\n        ]),\r\n        body: JSON.stringify(userDataRegister)\r\n    })\r\n        .then(checkResponse)\r\n}\r\nexport const getProfileData = () => {\r\n    return fetch(`${urlServ}auth/user`, {\r\n        method: 'GET',\r\n        headers: new Headers([\r\n            ['Content-Type', 'application/json'],\r\n            ['Authorization', `Bearer ${getCookie('accessToken')}`]\r\n        ]),\r\n    })\r\n        .then(checkResponse)\r\n}\r\n\r\n\r\nexport const sendProfileData = (changeDataProfile: TsendProfileData) => {\r\n    return fetch(`${urlServ}auth/user`, {\r\n        method: 'PATCH',\r\n        headers: new Headers([\r\n            ['Content-Type', 'application/json'],\r\n            ['Authorization', `Bearer ${getCookie('accessToken')}`]\r\n        ]),\r\n        body: JSON.stringify(changeDataProfile)\r\n    })\r\n        .then(checkResponse)\r\n\r\n}\r\nexport const refreshTokenApi = () => {\r\n    return fetch(`${urlServ}auth/token`, {\r\n        method: 'POST',\r\n        headers: new Headers([\r\n            ['Content-Type', 'application/json'],\r\n        ]),\r\n        body: JSON.stringify({ 'token': localStorage.getItem(\"refreshToken\") }),\r\n    })\r\n        .then(checkResponse)\r\n}\r\n\r\n\r\nexport const logoutUserApi = (refreshToken: TlogoutUserApi) => {\r\n    return fetch(`${urlServ}auth/logout`, {\r\n        method: 'POST',\r\n        headers: new Headers([\r\n            ['Content-Type', 'application/json'],\r\n        ]),\r\n        body: JSON.stringify(refreshToken)\r\n    })\r\n        .then(checkResponse)\r\n}","import { getIngredients } from '../../utils/burgerApi';\r\nimport {Tingredient} from '../types/ingredientsType';\r\nimport {AppThunk, AppDispatch} from '../types/index'\r\nexport const GET_INGREDIENTS_REQUEST:'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS:'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED:'GET_INGREDIENTS_FAILED' = 'GET_INGREDIENTS_FAILED';\r\n\r\ninterface IgetIngredientActionSuccess {\r\n    readonly type: typeof GET_INGREDIENTS_SUCCESS;\r\n    readonly ingredients:Tingredient[]\r\n}\r\ninterface IgetIngredsFailed {\r\n    readonly type: typeof GET_INGREDIENTS_FAILED;\r\n}\r\nconst getIngredientActionSuccess = (ingredients:any):IgetIngredientActionSuccess => ({\r\n    type: GET_INGREDIENTS_SUCCESS,\r\n    ingredients\r\n})\r\n\r\nconst getIngredsFailed = ():IgetIngredsFailed => ({\r\n        type: GET_INGREDIENTS_FAILED\r\n})\r\n\r\n\r\nexport const  getIngredientsAction:AppThunk = () => {\r\n    return function(dispatch:AppDispatch) {\r\n        dispatch({\r\n            type: GET_INGREDIENTS_REQUEST\r\n        });\r\n        getIngredients().then(res => {\r\n                if(res && res.success) {\r\n                    dispatch(getIngredientActionSuccess(res.data))\r\n                } else {\r\n                    dispatch(getIngredsFailed())\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch(getIngredsFailed())\r\n            })\r\n    }\r\n}","import {AppThunk, AppDispatch} from '../types/index'\r\nimport {\r\n    TforgotPasswordApi,\r\n    TresetPasswordApi,\r\n} from '../types/autchType';\r\nexport const CHANGE_REGISTER_FORM_VALUE: 'CHANGE_REGISTER_FORM_VALUE' = 'CHANGE_REGISTER_FORM_VALUE';\r\nexport const REGISTER_FORM_SUBMIT: 'REGISTER_FORM_SUBMIT' = 'REGISTER_FORM_SUBMIT';\r\nexport const REGISTER_FORM_SUBMIT_SUCCESS: 'REGISTER_FORM_SUBMIT_SUCCESS' = 'REGISTER_FORM_SUBMIT_SUCCESS';\r\nexport const REGISTER_FORM_SUBMIT_FAILED: 'REGISTER_FORM_SUBMIT_FAILED' = 'REGISTER_FORM_SUBMIT_FAILED';\r\nexport const LOGOUT_USER: 'LOGOUT_USER' = 'LOGOUT_USER';\r\nexport const fORGOT_FORM_SUBMIT: 'fORGOT_FORM_SUBMIT' = 'fORGOT_FORM_SUBMIT';\r\nexport const fORGOT_FORM_SUCCESS: \"fORGOT_FORM_SUCCESS\" = \"fORGOT_FORM_SUCCESS\";\r\nexport const fORGOT_FORM_FAILED: 'fORGOT_FORM_FAILED' = 'fORGOT_FORM_FAILED';\r\nexport const fORGOT_FORM_CLEANING: 'fORGOT_FORM_CLEANING' = 'fORGOT_FORM_CLEANING';\r\nexport const RESET_FORM_SUBMIT: 'RESET_FORM_SUBMIT' = 'RESET_FORM_SUBMIT';\r\nexport const RESET_fORM_SUCCESS: \"RESET_fORM_SUCCESS\" = \"RESET_fORM_SUCCESS\";\r\nexport const RESET_fORM_FAILED: \"RESET_fORM_FAILED\" = \"RESET_fORM_FAILED\";\r\nexport const RESET_fORM_CLEANING: 'RESET_fORM_FAILED' = 'RESET_fORM_FAILED';\r\nexport const GLOBAL_CLEANING_FORM: 'GLOBAL_CLEANING_FORM' = 'GLOBAL_CLEANING_FORM';\r\n\r\ntype TlogoutUser = {\r\n    readonly type: typeof LOGOUT_USER\r\n}\r\ntype TforgotFormCleaning = {\r\n    readonly type: typeof fORGOT_FORM_CLEANING\r\n}\r\ntype TglobalCleaningForm = {\r\n    readonly type: typeof GLOBAL_CLEANING_FORM\r\n}\r\n\r\n\r\ntype TsetRegisterFormValue = {\r\n    readonly type: typeof CHANGE_REGISTER_FORM_VALUE\r\n    field: string,\r\n    value: string\r\n}\r\nexport const setRegisterFormValue = (field: string, value: string): TsetRegisterFormValue => ({\r\n    type: CHANGE_REGISTER_FORM_VALUE,\r\n    field,\r\n    value\r\n})\r\n\r\n\r\n\r\n\r\n\r\ntype TloginFormSuccess = {\r\n    readonly type: typeof REGISTER_FORM_SUBMIT_SUCCESS,\r\n    tokenData: Response\r\n}\r\ntype TloginFormFailed = {\r\n    readonly type: typeof REGISTER_FORM_SUBMIT_FAILED\r\n}\r\ntype TloginFormRequest = {\r\n    readonly type: typeof REGISTER_FORM_SUBMIT\r\n}\r\n\r\n\r\nconst loginFormSuccess = (tokenData: Response): TloginFormSuccess => ({\r\n    type: REGISTER_FORM_SUBMIT_SUCCESS,\r\n    tokenData\r\n})\r\n\r\n\r\nconst loginFormFailed = (): TloginFormFailed => ({\r\n    type: REGISTER_FORM_SUBMIT_FAILED\r\n})\r\nconst loginFormRequest = (): TloginFormRequest => ({\r\n    type: REGISTER_FORM_SUBMIT\r\n})\r\n\r\nexport const register:AppThunk = (userDataRegister: any, sendApi: Function) => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch(loginFormRequest())\r\n        sendApi(userDataRegister).then((res: Response) => {\r\n            dispatch(loginFormSuccess(res))\r\n        })\r\n            .catch((err: any) => {\r\n                dispatch(loginFormFailed())\r\n            })\r\n    }\r\n}\r\ntype TforgotFormSuccess = {\r\n    readonly type: typeof fORGOT_FORM_SUCCESS,\r\n    data: Response\r\n}\r\ntype TforgotFormFailed = {\r\n    readonly type: typeof fORGOT_FORM_FAILED\r\n}\r\ntype TforgotFormRequest = {\r\n    readonly type: typeof fORGOT_FORM_SUBMIT\r\n}\r\n\r\n\r\nconst forgotFormSuccess = (data: Response): TforgotFormSuccess => ({\r\n    type: fORGOT_FORM_SUCCESS,\r\n    data\r\n})\r\n\r\n\r\nconst forgotFormFailed = (): TforgotFormFailed => ({\r\n    type: fORGOT_FORM_FAILED\r\n})\r\nconst forgotFormRequest = (): TforgotFormRequest => ({\r\n    type: fORGOT_FORM_SUBMIT\r\n})\r\n\r\nexport const forgotPassword = (data: TforgotPasswordApi, sendApi: Function) => {\r\n    return function (dispatch: Function) {\r\n        dispatch(forgotFormRequest())\r\n        sendApi(data).then((res: Response) => {\r\n            dispatch(forgotFormSuccess(res))\r\n        })\r\n            .catch((err: any) => {\r\n                dispatch(forgotFormFailed())\r\n            })\r\n    }\r\n}\r\ntype TresetFormSuccess = {\r\n    readonly type: typeof RESET_fORM_SUCCESS,\r\n    tokenData: Response\r\n}\r\ntype TresetFormFailed = {\r\n    readonly type: typeof RESET_fORM_FAILED\r\n}\r\ntype TresetFormRequest = {\r\n    readonly type: typeof RESET_FORM_SUBMIT\r\n}\r\n\r\n\r\nconst resetFormSuccess = (tokenData: Response): TresetFormSuccess => ({\r\n    type: RESET_fORM_SUCCESS,\r\n    tokenData\r\n})\r\n\r\n\r\nconst resetFormFailed = (): TresetFormFailed => ({\r\n    type: RESET_fORM_FAILED\r\n})\r\nconst resetFormRequest = (): TresetFormRequest => ({\r\n    type: RESET_FORM_SUBMIT\r\n})\r\n\r\n\r\n\r\nexport const resetPassword = (data: TresetPasswordApi, sendApi: Function) => {\r\n    return function (dispatch: Function) {\r\n        dispatch(resetFormRequest())\r\n        sendApi(data).then((res: Response) => {\r\n            dispatch(resetFormSuccess(res))\r\n        })\r\n            .catch((err: any) => {\r\n                dispatch(resetFormFailed())\r\n            })\r\n\r\n    }\r\n}\r\nexport type TregisterFormAction =\r\n    TloginFormSuccess\r\n    | TloginFormFailed\r\n    | TloginFormRequest\r\n    | TforgotFormSuccess\r\n    | TforgotFormFailed\r\n    | TforgotFormRequest\r\n    | TresetFormSuccess\r\n    | TresetFormFailed\r\n    | TresetFormRequest\r\n    | TsetRegisterFormValue\r\n    | TlogoutUser\r\n    | TforgotFormCleaning\r\n    | TglobalCleaningForm\r\n    ;","import { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport autchFormStyle from '../autchFormStyle.module.css';\r\nimport { register } from '../../services/action/registerForm'\r\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\r\nimport { useEffect, useState, SyntheticEvent, ChangeEvent } from 'react';\r\nimport { autchUser } from '../../utils/burgerApi';\r\nimport { setCookie, getCookie } from '../../utils/utils'\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { setRegisterFormValue, GLOBAL_CLEANING_FORM } from '../../services/action/registerForm';\r\n\r\nexport const LoginForm = () => {\r\n    const [passwordState,\r\n        setPasswordState] = useState<'password' | 'text'>('password');\r\n    const { email, password, registerReceivedData,\r\n        registrationFailed } =\r\n        useSelector((state) => state.registrationForm);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const registerSend = () => {\r\n        if (registerReceivedData) {\r\n            const authToken = registerReceivedData.accessToken.split('Bearer ')[1];\r\n            setCookie('accessToken', authToken, {});\r\n            localStorage.setItem('refreshToken', registerReceivedData.refreshToken);\r\n            const from: any = location.state;\r\n            if (from !== null) {\r\n                navigate(from)\r\n            }\r\n            else {\r\n                navigate('/')\r\n            }\r\n        }\r\n    }\r\n    const openPassword = () => {\r\n        setPasswordState(passwordState === 'password'\r\n            ? 'text'\r\n            : 'password')\r\n    }\r\n    useEffect(() => {\r\n        registerSend();\r\n        dispatch({ type: GLOBAL_CLEANING_FORM });\r\n    }, [registerReceivedData])\r\n    const onChangeForm = (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        dispatch(register({\r\n            email,\r\n            password\r\n        }, autchUser));\r\n    }\r\n    const onFormChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setRegisterFormValue(e.target.name, e.target.value));\r\n    }\r\n    return (\r\n        <div className={autchFormStyle.main}>\r\n            <form onSubmit={onChangeForm} className={autchFormStyle.box_form}>\r\n                <h2 className=\"text text_type_main-medium pb-6\">Вход</h2>\r\n                <div className=\"pb-6\">\r\n                    <Input name={'email'}\r\n                        size={'default'}\r\n                        type=\"email\"\r\n                        placeholder=\"E-mail\"\r\n                        value={email}\r\n                        errorText={'test'}\r\n                        onChange={onFormChange}></Input>\r\n                </div>\r\n                <div className=\"pb-6\">\r\n                    <Input name={'password'}\r\n                        icon=\"ShowIcon\"\r\n                        onIconClick={openPassword}\r\n                        type={passwordState}\r\n                        placeholder=\"Пароль\"\r\n                        value={password}\r\n                        onChange={onFormChange}></Input>\r\n                </div>\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"medium\" >\r\n                    Войти</Button>\r\n                {registrationFailed === true && <p>Проверьте правильность заполнения формы</p>}\r\n                <div className={`${autchFormStyle.box_register} mt-20`}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">Вы — новый пользователь?</p>\r\n                    <Link to='/register' className={`text text_type_main-default ${autchFormStyle.link}`} > Зарегистрироваться</Link>\r\n                </div>\r\n                <div className={autchFormStyle.box_register}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">Забыли пароль?</p>\r\n                    <Link to='/forgot-password' className={`text text_type_main-default ${autchFormStyle.link}`}> Восстановить пароль</Link>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default LoginForm","import { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport autchFormStyle from '../autchFormStyle.module.css';\r\nimport { sendRegisterUser } from '../../utils/burgerApi';\r\nimport { getCookie } from '../../utils/utils'\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useState, useEffect, ChangeEvent, SyntheticEvent } from 'react';\r\nimport { register } from '../../services/action/registerForm'\r\nimport { setRegisterFormValue, GLOBAL_CLEANING_FORM } from '../../services/action/registerForm';\r\n\r\nexport const RegisterForm = () => {\r\n    const { name, email, password, registerReceivedData, registrationFailed } = useSelector((state) => state.registrationForm);\r\n    const [passwordState,\r\n        setPasswordState] = useState<'password' | 'text'>('password');\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const registerSend = () => {\r\n        const token = getCookie('accessToken')\r\n        if (registerReceivedData) {\r\n            navigate('/');\r\n        }\r\n        else if (token) {\r\n            navigate('/')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        registerSend();\r\n        dispatch({ type: GLOBAL_CLEANING_FORM });\r\n    }, [registerReceivedData])\r\n\r\n    const onChangeForm = (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        dispatch(register({\r\n            name,\r\n            email,\r\n            password\r\n        }, sendRegisterUser));\r\n    }\r\n    const openPassword = () => {\r\n        setPasswordState(passwordState === 'password'\r\n            ? 'text'\r\n            : 'password')\r\n    }\r\n    const onFormChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setRegisterFormValue(e.target.name, e.target.value));\r\n    }\r\n    return (\r\n        <div className={autchFormStyle.main}>\r\n            <form onSubmit={onChangeForm} className={autchFormStyle.box_form}>\r\n                <h2 className=\"text text_type_main-medium pb-6\">Регистрация</h2>\r\n                <div className=\"pb-6\">\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder=\"имя\"\r\n                        name={'name'}\r\n                        value={name}\r\n                        onChange={onFormChange}></Input>\r\n                </div>\r\n                <div className=\"pb-6\">\r\n                    <Input\r\n                        type=\"email\"\r\n                        name={'email'}\r\n                        placeholder=\"E-mail\"\r\n                        value={email}\r\n                        onChange={onFormChange}></Input>\r\n                </div>\r\n                <div className=\"pb-6\">\r\n                    <Input\r\n                        icon=\"ShowIcon\"\r\n                        name={'password'}\r\n                        onIconClick={openPassword}\r\n                        type={passwordState}\r\n                        placeholder=\"Пароль\"\r\n                        value={password}\r\n                        onChange={onFormChange}></Input>\r\n                </div>\r\n                {registrationFailed === true && <p>Проверьте правильность заполнения формы</p>}\r\n                <Button type=\"primary\" size=\"medium\">Зарегистрироваться</Button>\r\n                <div className={`${autchFormStyle.box_register} mt-20`}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">Уже зарегистрированы?</p>\r\n                    <Link\r\n                        to='/login'\r\n                        className={`text text_type_main-default ${autchFormStyle.link}`}>Войти</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default RegisterForm","import { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport autchFormStyle from '../autchFormStyle.module.css';\r\nimport { forgotPasswordApi } from '../../utils/burgerApi';\r\nimport {validateField} from '../../utils/utils';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { Link, useNavigate} from 'react-router-dom';\r\nimport {getCookie} from '../../utils/utils'\r\nimport { useEffect, useState, ChangeEvent, SyntheticEvent } from 'react';\r\nimport { forgotPassword } from '../../services/action/registerForm';\r\nimport { setRegisterFormValue, fORGOT_FORM_CLEANING } from '../../services/action/registerForm';\r\nexport const ForgotPasswordForm = () => {\r\n    const { emailForgot, registerReceivedData, forgotSuccess} = useSelector((state) => state.registrationForm);\r\n   const [validErrosText, setValidErrosText] = useState('');\r\n   const [isValid, setIsvalid] = useState(null)\r\n    const registerSend = () => {\r\n        if (registerReceivedData) {\r\n            navigate('/login');\r\n        }\r\n    }\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if(emailForgot) {\r\n            validateField('email', emailForgot, setValidErrosText, isValid, setIsvalid)\r\n        }\r\n    }, [emailForgot])\r\n    useEffect(() => {\r\n        dispatch({type:fORGOT_FORM_CLEANING})\r\n        registerSend();\r\n    }, [forgotSuccess])\r\n    useEffect(()=> {\r\n        const token = getCookie('accessToken');\r\n        if(token) {\r\n            navigate('/')\r\n        }\r\n\r\n    }, [])\r\n   \r\n const onChangeForm = (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if(isValid !== null || forgotSuccess) {\r\n        dispatch(forgotPassword({\r\n            email: emailForgot,\r\n        }, forgotPasswordApi));\r\n            navigate('/reset-password', {replace: true, state:'forgotPage'});\r\n    }\r\n    }\r\n    const onFormChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setRegisterFormValue(e.target.name, e.target.value));\r\n    }\r\n    return (\r\n        <div className={autchFormStyle.main}>\r\n            <form onSubmit={onChangeForm} className={autchFormStyle.box_form}>\r\n                <h2 className=\"text text_type_main-medium pb-6\">Востановление пароля</h2>\r\n                <div className=\"pb-6\">\r\n                    <Input type=\"email\"\r\n                        name={'emailForgot'}\r\n                        placeholder=\"Укажите e-mail\"\r\n                        value={emailForgot}\r\n                        onChange={onFormChange}></Input>\r\n                        <p>{validErrosText}</p>\r\n                </div>\r\n                <Button type=\"primary\" size=\"medium\">Востановить</Button>\r\n                <div className={`${autchFormStyle.box_register} mt-20`}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">Вспомнили пароль?</p>\r\n                    <Link to='/login' className={`text text_type_main-default ${autchFormStyle.link}`} >Войти</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ForgotPasswordForm","import { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport autchFormStyle from '../autchFormStyle.module.css';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\r\nimport { resetPasswordApi } from '../../utils/burgerApi';\r\nimport { resetPassword, RESET_fORM_CLEANING } from '../../services/action/registerForm';\r\nimport { setRegisterFormValue, GLOBAL_CLEANING_FORM} from '../../services/action/registerForm';\r\nimport { useState, useEffect, ChangeEvent, SyntheticEvent } from 'react';\r\nexport const ResetPasswordForm = () => {\r\n    const { password, emailCode, registerReceivedData, resetSuccess} = useSelector((state) => state.registrationForm);\r\n        const [passwordState,\r\n            setPasswordState] = useState < 'password' | 'text' > ('password');\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const registerSend = () => {\r\n        if (registerReceivedData || resetSuccess===true ) {\r\n            navigate('/login');\r\n        }\r\n        if(location.state=== null) {\r\n            navigate('/');\r\n        }\r\n    }\r\n    const openPassword = () => {\r\n        setPasswordState(passwordState === 'password'\r\n            ? 'text'\r\n            : 'password')\r\n    }\r\n    const onChangeForm = (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        dispatch(resetPassword({\r\n            'password':password, 'token':emailCode\r\n        }, resetPasswordApi));\r\n        if(resetSuccess) {\r\n            dispatch({ type:RESET_fORM_CLEANING})\r\n            navigate('/login');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        registerSend();\r\n        dispatch({type:GLOBAL_CLEANING_FORM});\r\n    }, [registerReceivedData, resetSuccess])\r\n    const onFormChange = (e:  ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setRegisterFormValue(e.target.name, e.target.value));\r\n    }\r\n    return (\r\n        <div className={autchFormStyle.main}>\r\n            <form onSubmit={onChangeForm} className={autchFormStyle.box_form}>\r\n                <h2 className=\"text text_type_main-medium pb-6\">Востановление пароля</h2>\r\n                <div className=\"pb-6\">\r\n                    <Input\r\n                        name={'password'}\r\n                        icon=\"ShowIcon\"\r\n                        placeholder=\"Введите новый пароль\"\r\n                        onIconClick={openPassword}\r\n                        value={password}\r\n                        type={passwordState}\r\n                        onChange={onFormChange}></Input>\r\n                </div>\r\n                <div className=\"pb-6\">\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"emailCode\"\r\n                        placeholder=\"Введите код из письма\"\r\n                        value={emailCode}\r\n                        onChange={onFormChange}></Input>\r\n                </div>\r\n                <Button type=\"primary\" size=\"medium\">Сохранить</Button>\r\n                <div className={`${autchFormStyle.box_register} mt-20`}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">Вспомнили пароль?</p>\r\n                    <Link\r\n                        to='/login'\r\n                        className={`text text_type_main-default ${autchFormStyle.link}`}>Войти</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ResetPasswordForm","import profile from './profile.module.css';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { useNavigate, NavLink } from \"react-router-dom\";\r\nimport { deleteCookie } from '../../utils/utils';\r\nimport { LOGOUT_USER } from '../../services/action/registerForm';\r\nimport { logoutUserApi } from '../../utils/burgerApi';\r\nexport const ProfileMenu = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const logoutUser = () => {\r\n        const token = localStorage.getItem('refreshToken');\r\n        deleteCookie('accessToken');\r\n        logoutUserApi({ 'token': token });\r\n        localStorage.removeItem(\"refreshToken\");\r\n        dispatch({\r\n            type: LOGOUT_USER\r\n        })\r\n        navigate('/login');\r\n    }\r\n    const setActive = ({ isActive }: any) =>\r\n        isActive ? `${profile.links__profile_menu_active}\r\n    text text_type_main-medium `:\r\n            `${profile.links__profile_menu} text text_type_main-medium`;\r\n\r\n\r\n    return (\r\n        <div className={profile.menu__box}>\r\n            <ul className={profile.menu__lists}>\r\n                <li className={`${profile.menu__list}`}> <NavLink to=\"/profile\" className={setActive} end>Профиль </NavLink></li>\r\n                <li className={`${profile.menu__list}`}><NavLink to=\"/profile/orders\" className={setActive} end>История заказов </NavLink></li>\r\n                <li onClick={logoutUser} className={`${profile.menu__list} text text_type_main-medium`}>Выход</li>\r\n            </ul>\r\n            <p className=\"text text_type_main-default text_color_inactive mt-20\">В этом разделе вы можете\r\n                изменить свои персональные данные</p>\r\n        </div>\r\n    )\r\n}","import { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport profile from './profile.module.css';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useState, useEffect, ChangeEvent } from 'react';\r\nimport { getProfileData, sendProfileData, refreshTokenApi } from '../../utils/burgerApi';\r\nimport { setCookie } from '../../utils/utils';\r\nimport { ProfileMenu } from './ProfileMenu'\r\n\r\nexport const Profile = () => {\r\n    const [emailUser, setEmailUser] = useState('');\r\n    const [nameUser, setNameUser] = useState('');\r\n    const [passwordUser, setPaswordUser] = useState('');\r\n    const [isLogin, setIslogin] = useState(false);\r\n    const navigate = useNavigate();\r\n    const location = useLocation()\r\n    const onFormChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmailUser(e.target.value);\r\n    }\r\n    const onFormChangeName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNameUser(e.target.value);\r\n    }\r\n    const onFormChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPaswordUser(e.target.value)\r\n    }\r\n    const postUserData = () => {\r\n        getProfileData()\r\n            .then((res) => {\r\n                if (res && res.success) {\r\n                    setEmailUser(res.user.email);\r\n                    setNameUser(res.user.name);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message === 'jwt expired')\r\n                if (err.message === 'jwt expired') {\r\n                    refreshTokenApi()\r\n                        .then((res) => {\r\n                            const authToken = res.accessToken.split('Bearer ')[1];\r\n                            setCookie('accessToken', authToken, {});\r\n                            localStorage.setItem('refreshToken', res.refreshToken);\r\n                            setIslogin(true)\r\n                            getProfileData()\r\n                            setEmailUser(res.user.email);\r\n                            setNameUser(res.user.name);\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log(err)\r\n                            if (err.message === 'Token is invalid') {\r\n                                navigate('/login')\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    navigate('/login', location);\r\n                }\r\n            })\r\n    }\r\n    const changeProfileData = () => {\r\n        sendProfileData({\r\n            'email': emailUser,\r\n            'password': passwordUser,\r\n            'name': nameUser\r\n        })\r\n            .then((res) => {\r\n                if (res && res.success) {\r\n                    setEmailUser(res.user.email);\r\n                    setNameUser(res.user.name);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                console.log(err.message === 'jwt expired')\r\n                if (err.message === 'jwt expired') {\r\n                    refreshTokenApi()\r\n                        .then((res) => {\r\n                            const authToken = res.accessToken.split('Bearer ')[1];\r\n                            setCookie('accessToken', authToken, {});\r\n                            localStorage.setItem('refreshToken', res.refreshToken);\r\n                            setIslogin(true)\r\n                            sendProfileData({\r\n                                'email': emailUser,\r\n                                'password': passwordUser,\r\n                                'name': nameUser\r\n                            })\r\n                                .then((res) => {\r\n                                    if (res && res.success) {\r\n                                        setEmailUser(res.user.email);\r\n                                        setNameUser(res.user.name);\r\n                                    }\r\n                                })\r\n                                .catch((err) => {\r\n                                    console.log(err)\r\n                                })\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log(err)\r\n                            if (err.message === 'token invalid') {\r\n                                navigate('/login')\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    navigate('/login', location);\r\n                }\r\n\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        setIslogin(true)\r\n        postUserData()\r\n        setIslogin(false)\r\n    }, [isLogin])\r\n    const cleanerForm = () => {\r\n        postUserData()\r\n    }\r\n\r\n    return (\r\n        <div className={profile.main}>\r\n            <div className={profile.main__box}>\r\n                <ProfileMenu />\r\n                <div className={profile.inputs__box}>\r\n                    <Input icon=\"EditIcon\" type=\"text\" placeholder=\"Имя\" value={nameUser} onChange={onFormChangeName}></Input>\r\n                    <Input icon=\"EditIcon\" type=\"text\" placeholder=\"Логин\" value={emailUser} onChange={onFormChangeEmail}></Input>\r\n                    <Input icon=\"EditIcon\" type=\"password\" placeholder=\"Пароль\" value={passwordUser}\r\n                        onChange={onFormChangePassword}></Input>\r\n                    <div className={profile.button__box}>\r\n                        <Button onClick={changeProfileData} type=\"primary\" size=\"small\">Сохранить</Button>\r\n                        <Button onClick={cleanerForm} type=\"primary\" size=\"small\">Отмена</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Profile","export const OPEN_INGREDIENT_DETAILS:'OPEN_INGREDIENT_DETAILS' ='OPEN_INGREDIENT_DETAILS';\r\nexport const CLOSE_INGREDIENT_DETAILS:'CLOSE_INGREDIENT_DETAILS' = 'CLOSE_INGREDIENT_DETAILS';","import React from 'react';\r\nimport { FC, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { useDrag } from \"react-dnd\";\r\nimport { Tingredient } from '../../services/types/ingredientsType'\r\nimport { OPEN_INGREDIENT_DETAILS } from '../../services/action/IngredientDetail'\r\nimport {\r\n    CurrencyIcon,\r\n    Tab,\r\n    Counter\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport burgerIngredientsStyle from './burgerIngredients.module.css'\r\nimport { ingredientsType } from '../../services/constants'\r\nconst Ingredient: FC<{ ingredient: Tingredient, setModalIsOpen: Function }> = ({ ingredient, setModalIsOpen }) => {\r\n    const { _id, image, name, price, type } = ingredient;\r\n    let location = useLocation();\r\n\r\n    const [, dragRef] = useDrag({\r\n        type: 'ingredient',\r\n        item: { _id, image, name, price, type }\r\n    })\r\n    const { arrayID } = useSelector(state => state.arrayInConstructor)\r\n    const countIngredient = arrayID.filter((e: string) => e === ingredient._id).length\r\n    const dispatch = useDispatch();\r\n    const openModal = () => {\r\n        dispatch({ type: OPEN_INGREDIENT_DETAILS, ingredient: ingredient })\r\n        setModalIsOpen(true)\r\n    }\r\n\r\n    return (\r\n        <Link className={burgerIngredientsStyle.liks_style} to={{ pathname: `/ingredients/${_id}` }} state={{ positionPopap: location }}>\r\n            <li ref={dragRef} onClickCapture={openModal} key={ingredient._id} className={`${burgerIngredientsStyle.card_list} pl-4`}>\r\n                {countIngredient > 0 ? <Counter count={countIngredient} size=\"default\" /> : null}\r\n                <img alt={ingredient.name} src={ingredient.image} className={`${burgerIngredientsStyle.picture} pl-4 pr-4`}></img>\r\n                <div className={`${burgerIngredientsStyle.card_price_box} pt-1 pb-1`}>\r\n                    <p className=\"text text_type_digits-default pr-2\">{ingredient.price}</p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n                <p className=\"text text_type_main-small\">{ingredient.name}</p>\r\n            </li></Link>)\r\n}\r\nconst Ingredients: FC<{ data: any, type: string, setModalIsOpen: Function }> = ({ data, type, setModalIsOpen }) => {\r\n\r\n    if (data !== null) {\r\n        const listItems = data\r\n            .filter((e: Tingredient) => e.type === type)\r\n            .map((ingtrdient: Tingredient) =>\r\n                <Ingredient key={ingtrdient._id} ingredient={ingtrdient} setModalIsOpen={setModalIsOpen} />\r\n            )\r\n        return listItems\r\n    }\r\n    else {\r\n        return (\r\n            <h2>нет</h2>)\r\n    }\r\n}\r\nexport default function BurgerIngredients() {\r\n    const [modalIsOpen, setModalIsOpen] = React.useState<boolean>(false)\r\n    const [current, setCurrent] = React.useState<string>('Булки');\r\n    const { ingredients } = useSelector(state => state.ingredients);\r\n    const bun = useRef<any>(null);\r\n    const sauce = useRef<any>(null);\r\n    const main = useRef<any>(null);\r\n    const tabClick = (current: string) => {\r\n        if (current === 'Булки') {\r\n            if (bun.current) {\r\n                bun.current.scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n            }\r\n            setCurrent('Булки')\r\n        }\r\n        else if (current === 'Соусы') {\r\n            if (bun.current) {\r\n                sauce.current.scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n            }\r\n            setCurrent('Соусы')\r\n        }\r\n        else if (current === 'Начинки') {\r\n            if (bun.current) {\r\n                main.current.scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n            }\r\n            setCurrent('Начинки')\r\n        }\r\n    }\r\n    const handleScroll = (e: any) => {\r\n        if (e.target.scrollTop < 239) {\r\n            setCurrent('Булки')\r\n        }\r\n        else if (e.target.scrollTop > 239 && e.target.scrollTop < 630) {\r\n            setCurrent('Соусы')\r\n        }\r\n        else if (e.target.scrollTop > 630) {\r\n            setCurrent('Начинки')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <section className={burgerIngredientsStyle.ingredients}>\r\n                <h1 className=\"text text_type_main-large\">Соберите бургер</h1>\r\n                <div\r\n                    className=\"mt-10 mb-5\"\r\n                    style={{\r\n                        display: 'flex'\r\n                    }}>\r\n                    <Tab active={current === 'Булки'} onClick={() => tabClick('Булки')} value=\"Булки\" >Булки</Tab>\r\n                    <Tab active={current === 'Соусы'} onClick={() => tabClick('Соусы')} value=\"Соусы\">Соусы</Tab>\r\n                    <Tab active={current === 'Начинки'} onClick={() => tabClick('Начинки')} value=\"Начинки\">Начинки</Tab>\r\n                </div>\r\n                <div onScroll={(e) => handleScroll(e)} className={burgerIngredientsStyle.box_with_ingredients}>\r\n                    <h2 className=\"text text_type_main-medium\">\r\n                        Булки\r\n                    </h2>\r\n                    <ul ref={bun} className={`${burgerIngredientsStyle.lists} pl-2`}>\r\n                        <Ingredients setModalIsOpen={setModalIsOpen} data={ingredients} type={ingredientsType.bun} />\r\n                    </ul>\r\n                    <h2 className=\"text text_type_main-medium\">Соусы</h2>\r\n                    <ul ref={sauce} className={`${burgerIngredientsStyle.lists} pl-2`}>\r\n                        <Ingredients setModalIsOpen={setModalIsOpen} data={ingredients} type={ingredientsType.sauce} />\r\n                    </ul>\r\n                    <h2 className=\"text text_type_main-medium\">Начинки</h2>\r\n                    <ul ref={main} className={`${burgerIngredientsStyle.lists} pl-2`}>\r\n                        <Ingredients setModalIsOpen={setModalIsOpen} data={ingredients} type={ingredientsType.main} />\r\n                    </ul>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n/*{ingredient && (<Modal height={539} closeModal={closeModal}   >\r\n    <IngredientDetails dataIngrid={ingredient} />\r\n</Modal>)}*/","export default __webpack_public_path__ + \"static/media/done.a1cd4e2d.png\";","import orderDetailsStyles from './orderDetails.module.css';\r\nimport done from '../../images/done.png';\r\nexport default function OrderDetails({ order }: any) {\r\n    if (order !== null) {\r\n        return (\r\n            <div className={orderDetailsStyles.main}>\r\n                <h2 className={`${orderDetailsStyles.position_center} mt-30 mb-8 text text_type_digits-large`}>{order.number}</h2>\r\n                <p className={`${orderDetailsStyles.position_center} text text_type_main-medium`}>идентификатор заказа</p>\r\n                <img className={`${orderDetailsStyles.picture} mt-15 mb-15`} src={done} alt='Одобрено' />\r\n                <p className={`${orderDetailsStyles.position_center} text text_type_main-small`}>Ваш заказ начали готовить</p>\r\n                <p className={`${orderDetailsStyles.position_center} mt-2 text text_type_main-small text_color_inactive`}>Дождитесь готовности на орбитальной станции</p>\r\n            </div>\r\n        )\r\n    }\r\n    else { return (<h2> Загрузка...</h2>) }\r\n}","import modalOverlayStyle from './modalOverlay.module.css';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { TmodalOverlayComponent } from '../../services/types/ModalType';\r\nimport { FC } from 'react';\r\n\r\n\r\nexport const ModalOverlay: FC<TmodalOverlayComponent> = (props) => {\r\n    const { modalOpen } = useSelector((state: any) => state.ingredientDetail)\r\n    const handleCloseOverlay = (e: any) => {\r\n        if (e.target === e.currentTarget) {\r\n            props.closeModal()\r\n        }\r\n    }\r\n    if (modalOpen) {\r\n        return (\r\n            <div onClick={handleCloseOverlay} className={modalOverlayStyle.modal_overlay}>\r\n                {props.children}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}\r\nexport default ModalOverlay","import React from 'react';\r\nimport {FC} from 'react';\r\nimport modalStyle from './modal.module.css'\r\nimport { createPortal } from 'react-dom';\r\nimport ModalOverlay from '../ModalOverlay/ModalOverlay';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nexport const Modal:FC<{height: number, closeModal: () => void}> = (props) => {\r\n    const checkHeight = () => {\r\n        if (props.height === 539) {\r\n            return modalStyle.modal_container_height_539\r\n        }\r\n        else {\r\n            return modalStyle.modal_container_height_718\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        const handleEscClose = (e:any) => {\r\n            e.preventDefault()\r\n            e.key === 'Escape' &&  props.closeModal();\r\n        }\r\n        document.addEventListener('keydown', handleEscClose);\r\n        return () => {\r\n            document.removeEventListener('keydown', handleEscClose);\r\n        }\r\n    }, [props.closeModal]);\r\n    const element:any = document.getElementById('modal');\r\n    return createPortal(\r\n        <ModalOverlay closeModal={props.closeModal}>\r\n            <div className={`${modalStyle.modal_container} ${checkHeight()}`}>\r\n                <button onClick={props.closeModal} type=\"button\" className={modalStyle.modal_btn_close}>\r\n                    <CloseIcon  type=\"primary\" />\r\n                </button>\r\n                {props.children}\r\n            </div>\r\n        </ModalOverlay>, element\r\n    )\r\n}\r\nexport default Modal","export const ADD_INGREDIENT:'ADD_INGREDIENT' = 'ADD_INGREDIENT';\r\nexport const DELETE_INGREDIENT:'DELETE_INGREDIENT' = 'DELETE_INGREDIENT';\r\nexport const SORT_INGERDIENTS:'SORT_INGERDIENTS' = 'SORT_INGERDIENTS';\r\nexport const DELETE_BUN:'DELETE_BUN' = 'DELETE_BUN';\r\nexport const CLEAR_CONSTRUCTOR:'CLEAR_CONSTRUCTOR' = 'CLEAR_CONSTRUCTOR';","import { sendOrder } from '../../utils/burgerApi';\r\nimport { TorderNumber } from '../types/ingredientsType';\r\nimport {AppDispatch, AppThunk} from '../types/index';\r\nexport const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_FAILED: 'GET_ORDER_FAILED' = 'GET_ORDER_FAILED';\r\nexport const ORDER_CLEANING: 'ORDER_CLEANING' = 'ORDER_CLEANING';\r\nexport const OPEN_ORDER_MODAL: 'OPEN_ORDER_MODAL' = 'OPEN_ORDER_MODAL';\r\n\r\ntype TgetOrderActionSuccess = {\r\n    readonly type: typeof GET_ORDER_SUCCESS,\r\n    orederNumber: TorderNumber;\r\n}\r\ntype TgetOrderFailed = {\r\n    readonly type: typeof GET_ORDER_FAILED,\r\n}\r\nconst getOrderSuccess = (orederNumber: TorderNumber): TgetOrderActionSuccess => ({\r\n    type: GET_ORDER_SUCCESS,\r\n    orederNumber\r\n})\r\ntype TgetOrderRequest = {\r\n    readonly type: typeof GET_ORDER_REQUEST\r\n}\r\nconst getOrderRequest = (): TgetOrderRequest => ({\r\n    type: GET_ORDER_REQUEST,\r\n})\r\nconst getOrderFailed = (): TgetOrderFailed => ({\r\n    type: GET_ORDER_FAILED\r\n})\r\ntype TorderCleaning = {\r\n    readonly type: typeof ORDER_CLEANING\r\n}\r\nexport const orderCleaning = (): TorderCleaning => ({\r\n    type: ORDER_CLEANING\r\n})\r\nexport type TorderAction = TgetOrderActionSuccess\r\n    | TgetOrderFailed\r\n    | TgetOrderRequest\r\n    | TorderCleaning;\r\n\r\nexport const sendOrderAction:AppThunk = (arryId: string[]) => {\r\n    return function (dispatch:AppDispatch) {\r\n        dispatch(getOrderRequest())\r\n        sendOrder(arryId).then(res => {\r\n            if (res && res.success) {\r\n                dispatch(getOrderSuccess(res.order))\r\n            } else {\r\n                dispatch(getOrderFailed())\r\n            }\r\n        })\r\n\r\n            .catch(err => {\r\n                dispatch(getOrderFailed())\r\n            })\r\n    }\r\n}","import React, { FC } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CurrencyIcon, DragIcon, ConstructorElement, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport burgerConstructorStyle from './burgerConstructor.module.css';\r\nimport OrderDetails from '../OrderDetails/OrderDetails';\r\nimport Modal from '../Modal/Modal';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from '../../services/hooks'\r\nimport { ingredientsType } from '../../services/constants'\r\nimport {\r\n   Tingredient,\r\n   TconstructorDrop\r\n} from '../../services/types/ingredientsType'\r\nimport {\r\n   ADD_INGREDIENT,\r\n   DELETE_INGREDIENT,\r\n   SORT_INGERDIENTS,\r\n   DELETE_BUN,\r\n   CLEAR_CONSTRUCTOR\r\n}\r\n   from '../../services/action/constructorArray'\r\nimport { sendOrderAction, OPEN_ORDER_MODAL, ORDER_CLEANING } from '../../services/action/order'\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nconst ConstructorIngredient: FC<{ ingredient: Tingredient, index: number }> = ({ ingredient, index }) => {\r\n   const DropDragRef = React.useRef(null);\r\n   const dispatch = useDispatch();\r\n   const [{ isDrag }, dragRef] = useDrag({\r\n      type: \"ingredientInConstructior\",\r\n      item: { ingredient, index },\r\n      collect: monitor => ({\r\n         isDrag: monitor.isDragging()\r\n      })\r\n   });\r\n   const [, dropIngred] = useDrop({\r\n      accept: 'ingredientInConstructior',\r\n      drop(data: TconstructorDrop) {\r\n         dispatch({\r\n            type: SORT_INGERDIENTS,\r\n            dragIndex: data.index,\r\n            dropIndex: index\r\n         })\r\n      }\r\n   })\r\n   dragRef(dropIngred(DropDragRef))\r\n   const handleClose = () => {\r\n      dispatch({ type: DELETE_INGREDIENT, ingredient: ingredient })\r\n   }\r\n   return (\r\n      <>\r\n         {!isDrag &&\r\n            (<li ref={DropDragRef} className={burgerConstructorStyle.open_elements_box}>\r\n               <DragIcon type=\"primary\" />\r\n               <ConstructorElement isLocked={false} handleClose={handleClose}\r\n                  thumbnail={ingredient.image ?? ''} text={ingredient.name ?? ''} price={ingredient.price ?? 0} />\r\n            </li>)}\r\n      </>\r\n   )\r\n}\r\nconst IngredientsInConstructorLock: FC<{ ingredientsInConstructor: Tingredient[], positionEn: 'top' | 'bottom', position: string }> =\r\n   ({ ingredientsInConstructor, positionEn, position }) => {\r\n      const arrayBun: Tingredient | undefined = ingredientsInConstructor.find((e: Tingredient) => e.type === ingredientsType.bun)\r\n      if (ingredientsInConstructor.length !== 0 && arrayBun) {\r\n         return (\r\n            <div key={arrayBun._id} className={burgerConstructorStyle.lock_elements}>\r\n               <ConstructorElement type={positionEn} isLocked={true}\r\n                  thumbnail={arrayBun?.image ?? ''} text={`${arrayBun.name} ${position}`} price={arrayBun.price ?? 0} />\r\n            </div>)\r\n      }\r\n      else {\r\n         return (\r\n            <p>Выберите булку</p>)\r\n      }\r\n   }\r\nconst IngredientsInConstructor: FC<{ ingredientsInConstructor: any, type: string }> = ({ ingredientsInConstructor, type }) => {\r\n   if (!ingredientsInConstructor) {\r\n      return <p>Выберите ингредиент</p>;\r\n   }\r\n   return ingredientsInConstructor.filter((e: Tingredient) => e.type !== type).map((ingredient: Tingredient, index: number) =>\r\n      <ConstructorIngredient key={uuidv4()} index={index} ingredient={ingredient} />\r\n   );\r\n}\r\n\r\nexport default function BurgerConstructor() {\r\n   const { ingredients } = useSelector((state) => state.ingredients);\r\n   const [commonPrice, setCommonPrice] = React.useState(0);\r\n   const { ingredientsInConstructor } = useSelector((state) => state.arrayInConstructor);\r\n   const { orederNumber, orderNumberFailed, orederNumberRequest } = useSelector((state) => state.order)\r\n   const dispatch = useDispatch();\r\n   const bunInArray = ingredientsInConstructor.find((e: Tingredient) => e.type === ingredientsType.bun);\r\n   const closeModal = () => {\r\n      dispatch({ type: ORDER_CLEANING })\r\n      dispatch({ type: CLEAR_CONSTRUCTOR })\r\n      setCommonPrice(0)\r\n   }\r\n   const navigate = useNavigate()\r\n   const arrayId: any = ingredientsInConstructor.map((e: Tingredient) => e._id);\r\n   const openModal = () => {\r\n      dispatch(sendOrderAction(arrayId))\r\n      if (orderNumberFailed) {\r\n         navigate('/login')\r\n         return (\r\n            <p>Произошла ошибка при получении данных</p>\r\n         )\r\n      }\r\n      else if (orederNumberRequest) {\r\n         return (\r\n            <p>Загрузка...</p>\r\n\r\n         )\r\n      }\r\n   }\r\n   React.useEffect(() => {\r\n      if (orderNumberFailed) {\r\n         navigate('/login')\r\n         dispatch({ type: ORDER_CLEANING })\r\n      }\r\n\r\n   }, [orderNumberFailed])\r\n\r\n   React.useEffect(() => {\r\n      if (orederNumber !== null) {\r\n         dispatch({ type: OPEN_ORDER_MODAL, order: orederNumber })\r\n      }\r\n   }, [orederNumber])\r\n   React.useEffect(() => {\r\n      if (ingredients !== null) {\r\n      }\r\n   }, [ingredients]);\r\n   React.useEffect(\r\n      () => {\r\n         if (ingredientsInConstructor.length !== 0 && bunInArray) {\r\n            const price = ingredientsInConstructor.filter((e: Tingredient) => e.type !== ingredientsType.bun).reduce((acc: number, e: any) => acc + e.price, 0) + bunInArray.price;\r\n            setCommonPrice(price);\r\n         }\r\n      },\r\n      [ingredientsInConstructor]\r\n   )\r\n   const [, dropTarget] = useDrop({\r\n      accept: 'ingredient',\r\n      drop(ingredient: Tingredient) {\r\n         if (ingredient.type === ingredientsType.bun) {\r\n            if (bunInArray) {\r\n               dispatch({ type: DELETE_BUN, bunInArray: bunInArray })\r\n               dispatch({ type: ADD_INGREDIENT, ingredient: ingredient })\r\n            }\r\n            else {\r\n               dispatch({ type: ADD_INGREDIENT, ingredient: ingredient })\r\n            }\r\n         }\r\n         else {\r\n            dispatch({ type: ADD_INGREDIENT, ingredient: ingredient })\r\n         }\r\n\r\n      }\r\n   })\r\n   if (ingredients !== null) {\r\n      return (\r\n         <>\r\n            <section ref={dropTarget} className={`${burgerConstructorStyle.constructor} pt-25 mt-4 `}>\r\n               <IngredientsInConstructorLock positionEn={'top'} position={'Верх'} ingredientsInConstructor={ingredientsInConstructor} />\r\n               <ul className={`${burgerConstructorStyle.open_elements} pt-4`}>\r\n                  <IngredientsInConstructor type={ingredientsType.bun} ingredientsInConstructor={ingredientsInConstructor} />\r\n               </ul>\r\n               <IngredientsInConstructorLock positionEn={'bottom'} position={'Низ'} ingredientsInConstructor={ingredientsInConstructor} />\r\n               <div className={`${burgerConstructorStyle.price_container} mt-10 mr-4`}>\r\n                  <div className={`${burgerConstructorStyle.price_text} mr-10`}>\r\n                     <p className=\"text text_type_digits-medium pr-2\">{commonPrice}</p>\r\n                     <CurrencyIcon type=\"primary\" />\r\n                  </div>\r\n                  {ingredientsInConstructor.length > 0 ? <Button onClick={openModal} type=\"primary\" size=\"large\">\r\n                     Оформить заказ\r\n                  </Button> : null}\r\n               </div>\r\n               {orederNumberRequest && (<p>Загрузка...</p>)}\r\n            </section>\r\n            {orederNumber && (<Modal height={718} closeModal={closeModal}>\r\n               <OrderDetails order={orederNumber} />\r\n            </Modal>)}\r\n         </>\r\n      )\r\n   }\r\n   else {\r\n      return (\r\n         <h2> Загрузка...</h2>\r\n      )\r\n   }\r\n}","import mainBlockStyle from './mainBlock.module.css';\r\nimport { useEffect } from 'react';\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport BurgerIngredients from '../BurgerIngredients/BurgerIngredients';\r\nimport BurgerConstructor from '../BurgerConstructor/BurgerConstructor';\r\nexport const MainBlock = () => {\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        if(location.pathname !== '/') {\r\n            navigate('/');\r\n        }\r\n    }, [])\r\n    return (<main className={mainBlockStyle.main}>\r\n        <BurgerIngredients />\r\n        <BurgerConstructor />\r\n    </main>\r\n\r\n    )\r\n}\r\nexport default MainBlock","import { Navigate, useLocation  } from 'react-router-dom';\r\nimport { getCookie } from '../utils/utils'\r\nexport const ProtectedRoute = ({ children,  ...rest }:any) => {\r\n    const location = useLocation()\r\n        const token = getCookie('accessToken')\r\n    return ((token) ? children : <Navigate replace to= \"/login\" state={location.pathname}/>\r\n    )};\r\nexport default ProtectedRoute","import { useState, useEffect } from 'react';\r\nimport { Tingredient } from '../../services/types/ingredientsType';\r\nimport ingredientDetailsStyles from './ingredientDetails.module.css';\r\nimport { useSelector} from '../../services/hooks';\r\nimport { useParams } from \"react-router-dom\";\r\nexport type TingredientDetails = {\r\n    dataIngrid: Tingredient\r\n}\r\n\r\nexport const IngredientDetails = () => {\r\n    const { ingredients } = useSelector(state => state.ingredients);\r\n    const [dataIngrid, setDataingrid] = useState<any>(ingredients);\r\n    useEffect(() => {\r\n        if (ingredients) {\r\n            setDataingrid(ingredients.find((e: any) => e._id === urlIdData.id))\r\n        }\r\n    }, [ingredients])\r\n    const urlIdData = useParams();\r\n    return (\r\n        <>\r\n            {ingredients && dataIngrid && (\r\n                <div className={ingredientDetailsStyles.main}>\r\n                    <h2 className={`${ingredientDetailsStyles.title} mt-10 mr-10 ml-10 text text_type_main-large`}>Детали ингредиента</h2>\r\n                    <img className={ingredientDetailsStyles.picture} src={dataIngrid.image} alt={dataIngrid.name} />\r\n                    <p className={`${ingredientDetailsStyles.name} mt-4 mb-8 text text_type_main-medium`}>{dataIngrid.name}</p>\r\n                    <ul className={ingredientDetailsStyles.сomposition}>\r\n                        <li className={ingredientDetailsStyles.сomposition_list_box}>\r\n                            <p className=\"text text_type_main-default text_color_inactive\">Калории,ккал</p>\r\n                            <p className=\"text text_type_digits-default text_color_inactive\">{dataIngrid.calories}</p>\r\n                        </li>\r\n                        <li className={ingredientDetailsStyles.сomposition_list_box}>\r\n                            <p className=\"text text_type_main-default text_color_inactive\">Белки, г</p>\r\n                            <p className=\"text text_type_digits-default text_color_inactive\">{dataIngrid.proteins}</p>\r\n                        </li>\r\n                        <li className={ingredientDetailsStyles.сomposition_list_box}>\r\n                            <p className=\"text text_type_main-default text_color_inactive\">Жиры, г</p>\r\n                            <p className=\"text text_type_digits-default text_color_inactive\">{dataIngrid.fat}</p>\r\n                        </li>\r\n                        <li className={ingredientDetailsStyles.сomposition_list_box}>\r\n                            <p className=\"text text_type_main-default text_color_inactive\">Углеводы, г</p>\r\n                            <p className=\"text text_type_digits-default text_color_inactive\">{dataIngrid.carbohydrates}</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n            }\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default IngredientDetails","export const NotFound = () => {\r\n    return (\r\n        <div className=\"text text_type_main-default\">Нет такой страницы</div>\r\n    )\r\n\r\n}","import feedStyle from './feed.module.css';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { FC, useState, useEffect } from 'react';\r\nimport { TordersCard } from '../../services/types/ordersType'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst OrdesDoneList: FC = () => {\r\n    const { orders } = useSelector(state => state.wsOrdes);\r\n    const [ordersTemp, setOrdesTemp] = useState([]);\r\n    const filterDoneOrder = () => {\r\n        if (orders !== null) {\r\n            const tempOrder = orders.orders.filter((el: TordersCard) => el.status === 'done')\r\n                .slice(0, 10).map((el: TordersCard) => el.number)\r\n            setOrdesTemp(tempOrder)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        filterDoneOrder()\r\n    }, [orders])\r\n    if (ordersTemp.length > 0) {\r\n        return (\r\n            <>\r\n                {ordersTemp.map((el: TordersCard) => (\r\n                    <li key={uuidv4()} className={`text text_type_digits-default ${feedStyle.statistics__number_list} ${feedStyle.statistics__number}`}>{el}</li>\r\n                ))\r\n                }\r\n            </>\r\n\r\n        )\r\n    }\r\n    return (\r\n        <li key={uuidv4()} className={'text text_type_main-small'}>Готовых заказов нет</li>\r\n    )\r\n}\r\nconst OrdesNotDoneList: FC = () => {\r\n    const { orders } = useSelector(state => state.wsOrdes);\r\n    const [ordersTemp, setOrdesTemp] = useState([]);\r\n    const filterDoneOrder = () => {\r\n        if (orders !== null) {\r\n            const tempOrder = orders.orders.filter((el: TordersCard) => el.status === 'pending')\r\n                .slice(0, 5).map((el: TordersCard) => el.number)\r\n            setOrdesTemp(tempOrder)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        filterDoneOrder()\r\n    }, [orders])\r\n    if (ordersTemp.length > 0) {\r\n        return (\r\n            <>\r\n                {ordersTemp.map((el: TordersCard) => (\r\n                    <li key={uuidv4()} className={`text text_type_digits-default ${feedStyle.statistics__number_list}`}>{el}</li>\r\n                ))\r\n                }\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <li key={uuidv4()} className={'text text_type_main-small'}>Все заказы готовы</li>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport const FeedOrderStatistics:FC = () => {\r\n    const { orders } = useSelector(state => state.wsOrdes);\r\n    return (\r\n        <div className={feedStyle.statistics}>\r\n            <div className={feedStyle.statistics__number_order}>\r\n                <div className={feedStyle.statistics__number_box}>\r\n                    <p className='text text_type_main-medium mb-6'>Готовы:</p>\r\n                    <ul className={feedStyle.statistics__number_lists}>\r\n                        <OrdesDoneList />\r\n                    </ul>\r\n                </div>\r\n                <div className={feedStyle.statistics__number_box}>\r\n                    <p className='text text_type_main-medium  mb-6'>В работе:</p>\r\n                    <ul className={feedStyle.statistics__number_lists}>\r\n                        <OrdesNotDoneList />\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p className=\"text text_type_main-medium\">\r\n                    Выполнено за все время:\r\n                </p>\r\n                {orders && (<p className=\"text text_type_digits-large\">{orders.total}</p>)}\r\n            </div>\r\n            <div>\r\n                <p className=\"text text_type_main-medium\">\r\n                    Выполнено за сегодня:\r\n                </p>\r\n\r\n                {orders && (<p className=\"text text_type_digits-large\">{orders.totalToday}</p>)}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","export const OPEN_ORDER_CARD:'OPEN_ORDER_CARD' = 'OPEN_ORDER_CARD';\r\nexport const CLOSE_ORDER_CARD:'CLOSE_ORDER_CARD' = 'CLOSE_ORDER_CARD';\r\nexport type TopenOrderCard  = {\r\n    readonly type: typeof OPEN_ORDER_CARD;\r\n    orderCard:any\r\n}\r\n export type TcloseOrderCard = {\r\n    readonly  type: typeof CLOSE_ORDER_CARD\r\n}\r\n\r\nexport const openOrderCard = (orderCard:any):TopenOrderCard => ({\r\ntype: OPEN_ORDER_CARD,\r\norderCard\r\n})\r\nexport const closeOrderCard = ():TcloseOrderCard => ({\r\n    type: CLOSE_ORDER_CARD\r\n})\r\n","import cardsOrdersStyle from './cardsOrders.module.css';\r\nimport { FC, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { openOrderCard } from '../../services/action/orderCard';\r\nimport { orderDateChange, ordesCardFilter, totalCardOrder } from '../../utils/utils';\r\nimport { Tingredient } from '../../services/types/ingredientsType';\r\nimport { TordersCard } from '../../services/types/ordersType'\r\nimport {\r\n    CurrencyIcon\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nconst ListPicture: FC<{ pictureArray: Tingredient[] }> = ({ pictureArray }) => {\r\n    if (pictureArray.length > 0) {\r\n        return (\r\n            <>\r\n                {\r\n                    pictureArray.slice(0, 4).map((el, index: number) => (\r\n                        <img key={el._id} className={cardsOrdersStyle.card__picture} style={{ zIndex: pictureArray.length - index }} alt={el.name} src={el.image}></img>\r\n                    ))\r\n                }\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <p>Странно, бургеров в заказе нет</p>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const OrderCard: FC<{ ordesData: TordersCard }> = ({ ordesData }) => {\r\n    const { ingredients } = useSelector(state => state.ingredients);\r\n    const { orders } = useSelector(state => state.wsOrdes);\r\n    const [ingredientPictureArray, setIngredientPictureArray] = useState<Tingredient[] | []>([]);\r\n    const [ordesDate, setOrdesDate] = useState<string>('01.01.2022')\r\n    const [numberMoreSix, setNumberMoreSix] = useState<number>(1);\r\n    const [totalCard, setTotalCard] = useState<number>(0);\r\n    const [isHistory, setIsHistory] = useState<boolean>(false);\r\n    const location = useLocation();\r\n    const addIngredientsOrder = () => {\r\n        if (ingredients && orders && ordesData) {\r\n            const ordersIngredient = ingredients.filter(el => ordesData.ingredients.includes(el._id));\r\n            setNumberMoreSix(ordersIngredient.length - 5);\r\n            setTotalCard(totalCardOrder(ordesCardFilter(ordesData, ingredients)))\r\n            setIngredientPictureArray(ordersIngredient)\r\n        }\r\n    }\r\n    const dispatch = useDispatch()\r\n    const openModal = () => {\r\n        dispatch(openOrderCard(ordesData))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        addIngredientsOrder()\r\n        setOrdesDate(orderDateChange(ordesData.createdAt))\r\n    }, [ingredients, ordesData])\r\n    useEffect(() => {\r\n        if (location.pathname === \"/profile/orders\") {\r\n            setIsHistory(true)\r\n        }\r\n        else {\r\n            setIsHistory(false)\r\n        }\r\n    }, [ordesData])\r\n\r\n\r\n    return (\r\n        <Link className={cardsOrdersStyle.card__liks_style} to={{ pathname: `${location.pathname}/${ordesData._id}` }} state={{ positionPopap: location }}>\r\n            <li key={ordesData._id} onClickCapture={openModal} className={cardsOrdersStyle.card}>\r\n                <div className={cardsOrdersStyle.card__number_box}>\r\n                    <p className=\"text text_type_digits-default\">{ordesData.number}</p>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">{ordesDate}</p>\r\n                </div>\r\n                <h2 className='text text_type_main-medium pb-6'>{ordesData.name}</h2>\r\n                {isHistory && (<p style={ordesData.status === 'done' ? { color: '#00CCCC' } : { color: 'white' }} className={`${cardsOrdersStyle.details_status_text} text text_type_main-small mb-6`}>{ordesData.status === 'done' ? 'Выполнен' : 'Готовится'}</p>)}\r\n                <div className={cardsOrdersStyle.card__bottom_box}>\r\n                    <div className={cardsOrdersStyle.card__picture_box} >\r\n                        <ListPicture pictureArray={ingredientPictureArray} />\r\n                        {ingredientPictureArray[6] && (<div className={cardsOrdersStyle.card_picture_number_box}>\r\n                            <img className={`${cardsOrdersStyle.card__picture} ${cardsOrdersStyle.card_picture_last}`}\r\n                                style={{ zIndex: 8 }} alt={ingredientPictureArray[6].name}\r\n                                src={ingredientPictureArray[6].image}></img><p className={cardsOrdersStyle.card_picture_number_text}>{`+${numberMoreSix}`}</p></div>)}\r\n                    </div>\r\n                    <div className={cardsOrdersStyle.card__price_box}>\r\n                        <p className={`${cardsOrdersStyle.card__price} text text_type_digits-default `}>{totalCard}</p>\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </div>\r\n\r\n                </div>\r\n            </li> </Link>\r\n    )\r\n}","import { OrderCard } from './OrderCard';\r\nimport { useState, useEffect } from 'react';\r\nexport const CardListOrder = ({orders}:any) => {\r\n    const [ordersTemp, setOrdesTemp] = useState([]);\r\n    useEffect(() => {\r\n        if (orders !== null) {\r\n            setOrdesTemp(orders.orders)\r\n        }\r\n    }, [orders])\r\n    if (ordersTemp.length > 0) {\r\nreturn (\r\n    <>\r\n    {\r\n        ordersTemp.map((el: any) =>\r\n        <OrderCard key={el._id} ordesData={el} />)\r\n    }\r\n    </>\r\n)\r\n\r\n    }\r\n    else {\r\n        return (\r\n            <p>Заказов нет</p>\r\n        )\r\n    }\r\n}","import {TordersList} from '../../services/types/ordersType'\r\nexport const WS_CONNECTION_SUCCESS:'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR:'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED:'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const  WS_GET_MESSAGE:'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const  WS_SEND_MESSAGE:'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE'\r\nexport const WS_CONNECTION_START:'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\n\r\ntype TwsConnectionStart = {\r\n    readonly type: typeof WS_CONNECTION_START\r\n    payload:string\r\n}\r\ntype TwsConnectionSuccess = {\r\n    readonly type: typeof WS_CONNECTION_SUCCESS\r\n}\r\ntype TwsConnectionError = {\r\n    readonly type: typeof WS_CONNECTION_ERROR\r\n    payload:any\r\n}\r\ntype TwsConnectionClosed = {\r\n    readonly type: typeof WS_CONNECTION_CLOSED\r\n}\r\ntype TwsGetMessage = {\r\n    readonly type: typeof WS_GET_MESSAGE\r\n    payload: TordersList\r\n}\r\ntype TwsSendMessage = {\r\n    readonly type: typeof WS_SEND_MESSAGE\r\n    payload:any\r\n}\r\nexport type TwsOrdesAction = \r\nTwsConnectionStart\r\n|TwsConnectionSuccess\r\n|TwsConnectionError\r\n|TwsConnectionClosed\r\n|TwsGetMessage\r\n|TwsSendMessage;\r\n\r\n\r\nexport const wsConnectionStart = (urlServ:string):TwsConnectionStart => {\r\n    return {\r\n        type: WS_CONNECTION_START,\r\n        payload:urlServ\r\n    };\r\n};\r\n\r\nexport const wsConnectionSuccess = ():TwsConnectionSuccess => {\r\n    return {\r\n        type: WS_CONNECTION_SUCCESS\r\n    };\r\n};\r\n\r\nexport const wsConnectionError = (payload:any):TwsConnectionError => {\r\n    return {\r\n        type: WS_CONNECTION_ERROR,\r\n        payload\r\n    };\r\n};\r\n\r\nexport const wsConnectionClosed = ():TwsConnectionClosed => {\r\n    return {\r\n        type: WS_CONNECTION_CLOSED\r\n    };\r\n};\r\n\r\nexport const wsGetMessage = (orders:TordersList):TwsGetMessage => {\r\n    return {\r\n        type: WS_GET_MESSAGE,\r\n        payload: orders\r\n    };\r\n};\r\n\r\nexport const wsSendMessage = (orders:any):TwsSendMessage => {\r\n    return {\r\n        type: WS_SEND_MESSAGE,\r\n        payload: orders\r\n    };\r\n};","import feedStyle from  './feed.module.css';\r\nimport { FeedOrderStatistics } from './feedOrderStatistics';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { FC,useEffect } from 'react';\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport {urlWebSoketFeed} from '../../utils/burgerApi';\r\nimport {CardListOrder} from '../../components/OrdesCards/listCardOrder'\r\nimport { wsConnectionStart, wsConnectionClosed } from '../../services/action/wsOrdes';\r\nconst FeedListCardOrder: FC = () => {\r\n    const { orders } = useSelector(state => state.wsOrdes)\r\n    return (\r\n        <div className={feedStyle.box_cards}>\r\n            <h1 className='text text_type_main-large mt-10 pb-2'>Лента заказов</h1>\r\n            <ul className={feedStyle.card__list}>\r\n                <CardListOrder  orders={orders} />\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport const Feed = () => {\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(wsConnectionStart(urlWebSoketFeed));\r\n        return () => {\r\n            dispatch(wsConnectionClosed())\r\n        }\r\n    }, [dispatch]);\r\n    useEffect(() => {\r\n        if(location.pathname !== '/feed') {\r\n            navigate('/feed');\r\n        }\r\n    }, [])\r\nreturn (\r\n    <section className={feedStyle.feed}>\r\n        <FeedListCardOrder/>\r\n        <FeedOrderStatistics />\r\n    </section>\r\n)\r\n}","import cardsOrdersStyle from './cardsOrders.module.css';\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { FC, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { wsConnectionStart } from '../../services/action/wsOrdes';\r\nimport { urlWebSoketFeed } from '../../utils/burgerApi'\r\nimport { orderDateChange, ordesCardFilter, totalCardOrder } from '../../utils/utils';\r\nimport { TingredientOrder } from '../../services/types/ingredientsType';\r\nimport { TordersCard } from '../../services/types/ordersType';\r\nimport {urlWebSoketHistory} from '../../utils/burgerApi';\r\nimport { getCookie } from '../../utils/utils';\r\nimport {\r\n    CurrencyIcon\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nconst IngredientsInOrder: FC<{ oderData: TingredientOrder[] }> = ({ oderData }) => {\r\n    if (oderData) {\r\n        return (\r\n            <>\r\n                {\r\n                    oderData.map((el) =>\r\n                    (<li key={el._id} className={cardsOrdersStyle.details_list_ingredient}>\r\n                        <img className={`${cardsOrdersStyle.card__picture} mr-4`} alt='картинка' src={el.image}></img>\r\n                        <p className='text text_type_main-small mr-6'>{el.name}</p>\r\n                        <div className={cardsOrdersStyle.details_ingredient_price_box}>\r\n                            <p>{`${el.numberIngred} x ${el.numberIngred * el.price}`}</p>\r\n                            <CurrencyIcon type=\"primary\" />\r\n                        </div>\r\n                    </li>))\r\n                }\r\n            </>\r\n        )\r\n\r\n    }\r\n    else {\r\n        return (\r\n            <p>Странно ингредиетов нет</p>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const FeedDetailsOrder: FC = () => {\r\n    const { orders } = useSelector(state => state.wsOrdes);\r\n    const { ingredients } = useSelector(state => state.ingredients);\r\n    const [ordersTemp, setOrdesTemp] = useState<any>(null);\r\n    const [ingredientsArray, setingredientsArray] = useState<any>(null);\r\n    const [totalCard, setTotalCard] = useState<number>(0);\r\n    const [ordesDate, setOrdesDate] = useState<string>('01.01.2022');\r\n    const dispatch = useDispatch();\r\n    const urlIdData = useParams();\r\n    const location = useLocation()\r\n    const token = getCookie('accessToken')\r\n\r\n    useEffect(() => {\r\n        if (orders && ingredients) {\r\n            const ordersCard = orders.orders.find((e: TordersCard) => e._id === urlIdData.id);\r\n            setingredientsArray(ordesCardFilter(ordersCard, ingredients))\r\n            setOrdesTemp(ordersCard)\r\n        }\r\n        else {\r\n            location.pathname === `/profile/orders/${urlIdData.id}` ?\r\n            dispatch(wsConnectionStart(urlWebSoketHistory(token))):\r\n            dispatch(wsConnectionStart(urlWebSoketFeed));\r\n        }\r\n    }, [orders, ingredients])\r\n    useEffect(() => {\r\n        if (ordersTemp) {\r\n            setOrdesDate(orderDateChange(ordersTemp.createdAt))\r\n        }\r\n    }, [ordersTemp])\r\n    useEffect(() => {\r\n        if (ingredientsArray) {\r\n            setTotalCard(totalCardOrder(ingredientsArray))\r\n        }\r\n    }, [ingredientsArray])\r\n\r\n    return (\r\n        <>\r\n            {ordersTemp && ingredients && (\r\n                <section className={cardsOrdersStyle.details_main}>\r\n                    <div className={cardsOrdersStyle.details_main_popap}>\r\n                        <h2 className={`text_type_main-small mt-10  mb-10 ${cardsOrdersStyle.details_number_order}`}>{`#${ordersTemp.number}`}</h2>\r\n                        <p className={`text text_type_main-medium mb-3 ${cardsOrdersStyle.details_name}`}>{ordersTemp.name}</p>\r\n                        <p style={ordersTemp.status === 'done' ? { color: '#00CCCC' } : { color: 'red' }} className={`${cardsOrdersStyle.details_status_text} text text_type_main-small mb-15`}>{ordersTemp.status === 'done' ? 'Выполнен' : 'не выполнен'}</p>\r\n                        <p className='text text_type_main-medium mb-6'>Cостав:</p>\r\n                        <ul className={cardsOrdersStyle.details_lists}>\r\n                            <IngredientsInOrder oderData={ingredientsArray} />\r\n                        </ul>\r\n                        <div className={cardsOrdersStyle.details_bottom_box}>\r\n                            <p className='text_color_inactive'>{ordesDate}</p>\r\n                            <div className={cardsOrdersStyle.details_box_price}>\r\n                                <p className='text text_type_digits-default'>{totalCard}</p>\r\n                                <CurrencyIcon type=\"primary\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>)\r\n            }\r\n        </>\r\n    )\r\n}","import profile from './profile.module.css';\r\nimport { ProfileMenu } from './ProfileMenu';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { getCookie } from '../../utils/utils';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { wsConnectionStart, wsConnectionClosed } from '../../services/action/wsOrdes';\r\nimport { CardListOrder } from '../../components/OrdesCards/listCardOrder'\r\nimport {urlWebSoketHistory} from '../../utils/burgerApi';\r\nexport const HistoryOrdes = () => {\r\n    const { orders } = useSelector(state => state.wsOrdes)\r\n    const dispatch = useDispatch();\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const token = getCookie('accessToken')\r\n    useEffect(() => {\r\n        dispatch(wsConnectionStart(urlWebSoketHistory(token)))\r\n        return () => {\r\n            dispatch(wsConnectionClosed())\r\n        }\r\n\r\n    }, [dispatch]);\r\n    useEffect(() =>{\r\n        if(location.pathname !== '/profile/orders') {\r\n            navigate('/profile/orders');\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className={profile.main}>\r\n            <div className={profile.main__box_history}>\r\n                <div className='mt-20'>\r\n                    <ProfileMenu />\r\n                </div>\r\n                <ul className={profile.card__list}>\r\n                    <CardListOrder orders={orders} />\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useNavigate, Routes, Route, useLocation, } from 'react-router-dom';\r\nimport AppHeader from '../AppHeader/AppHeader';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { useSelector, useDispatch } from '../../services/hooks'\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { getIngredientsAction } from '../../services/action/Ingredients'\r\nimport { LoginForm } from '../../pages/LoginForm/LoginForm'\r\nimport { RegisterForm } from '../../pages/registerForm/RegisterForm';\r\nimport { ForgotPasswordForm } from '../../pages/forgot-passwordForm/ForgotPassword';\r\nimport { ResetPasswordForm } from '../../pages/reset-passwordForm/ResetPasswordForm';\r\nimport { Profile } from '../../pages/profile/Profile';\r\nimport { MainBlock } from '../MainBlock/MainBlock';\r\nimport { ProtectedRoute } from '../../pages/ProtectedRoute';\r\nimport { CLOSE_INGREDIENT_DETAILS } from '../../services/action/IngredientDetail'\r\nimport { IngredientDetails } from '../IngredientDetails/IngredientDetails'\r\nimport { Modal } from '../Modal/Modal';\r\nimport { NotFound } from '../../pages/NotFound/NotFound';\r\nimport { Feed } from '../../pages/feed/feed';\r\nimport { FeedDetailsOrder } from '../OrdesCards/DetailsOrder';\r\nimport { HistoryOrdes } from '../../pages/profile/HistoryOrdes';\r\nexport default function App() {\r\n    const { ingredientsRequest, ingredientsFailed } = useSelector(state => state.ingredients);\r\n    const dispatch = useDispatch();\r\n    type Tlocation = {\r\n        pathname?: string;\r\n        state?: any\r\n        search?: string;\r\n        hash?: string;\r\n        key?: string;\r\n    }\r\n    const location: Tlocation = useLocation()\r\n    const navigate = useNavigate();\r\n    const positionPopap = location.state && location.state.positionPopap\r\n    const closeModal: () => void = () => {\r\n        dispatch({ type: CLOSE_INGREDIENT_DETAILS })\r\n        navigate(positionPopap.pathname)\r\n    }\r\n    React.useEffect(() => {\r\n        dispatch(getIngredientsAction());\r\n    }, [dispatch])\r\n\r\n    React.useEffect(() => {\r\n        navigate(JSON.parse(window.sessionStorage.getItem('lastRoute') || '{}'))\r\n        window.onbeforeunload = () => {\r\n            window.sessionStorage.setItem('lastRoute', JSON.stringify(window.location.pathname))\r\n        }\r\n    }, [])\r\n    if (ingredientsFailed) {\r\n        return <div>Произошла ошибка</div>;\r\n    } else if (ingredientsRequest) {\r\n        return <div>Загрузка...</div>;\r\n    } else {\r\n        return (\r\n            <DndProvider backend={HTML5Backend}>\r\n                <>\r\n                    <AppHeader />\r\n                    {positionPopap &&\r\n                        <Routes>\r\n                            <Route path={'/ingredients/:id'} element={\r\n                                <Modal height={539} closeModal={() => closeModal()}>\r\n                                    <IngredientDetails />\r\n                                </Modal>\r\n                            } />\r\n                            <Route path={\"/feed/:id\"} element={\r\n                                <Modal height={716} closeModal={() => closeModal()}>\r\n                                    <FeedDetailsOrder />\r\n                                </Modal>\r\n                            } />\r\n                            <Route path={\"/profile/orders/:id\"} element={<ProtectedRoute path=\"/profile/orders/id\">\r\n                                <Modal height={716} closeModal={() => closeModal()}>\r\n                                    <FeedDetailsOrder />\r\n                                </Modal>\r\n                            </ProtectedRoute>} />\r\n                        </Routes>}\r\n                    <Routes location={positionPopap || location}>\r\n                        <Route path=\"/\" element={<MainBlock />} />\r\n                        <Route path=\"/login\" element={<LoginForm />} />\r\n                        <Route path=\"/register\" element={<RegisterForm />} />\r\n                        <Route path=\"/forgot-password\" element={<ForgotPasswordForm />} />\r\n                        <Route path=\"/feed\" element={<Feed />} />\r\n                        <Route path=\"/reset-password\" element={\r\n                            <ResetPasswordForm />} />\r\n                        <Route path=\"/feed/:id\" element={<FeedDetailsOrder />} />\r\n                        <Route path=\"/profile\" element={<ProtectedRoute path=\"/profile\">\r\n                            <Profile />\r\n                        </ProtectedRoute>} />\r\n                        <Route path={\"/profile/orders/:id\"} element={<ProtectedRoute path=\"/profile/orders/id\">\r\n                            <FeedDetailsOrder />\r\n                        </ProtectedRoute>} />\r\n                        <Route path=\"/profile/orders\" element={<ProtectedRoute path=\"/profile/orders\">\r\n                            <HistoryOrdes />\r\n                        </ProtectedRoute>} />\r\n                        <Route path={'/ingredients/:id'} element={\r\n                            <IngredientDetails />\r\n                        } />)\r\n                        <Route path='*' element={<NotFound />} />\r\n                    </Routes>\r\n                </>\r\n            </DndProvider>\r\n        )\r\n    }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const socketMiddleware = (wsActions: any) => (store: any) => {\r\n    let socket: any = null;\r\n    return (next: any) => (action: any) => {\r\n        const { dispatch, getState } = store;\r\n        const { type, payload } = action;\r\n        const { wsInit, wsSendMessage, onOpen, onClose, onError, onMessage } = wsActions;\r\n        if (type === wsInit) {\r\n            socket = new WebSocket(payload);\r\n        }\r\n        if (socket) {\r\n            socket.onopen = (event: any) => {\r\n                dispatch({ type: onOpen, payload: event });\r\n            };\r\n\r\n            socket.onerror = (event: any) => {\r\n                dispatch({ type: onError, payload: event });\r\n            };\r\n\r\n            socket.onmessage = (event: any) => {\r\n                const { data } = event;\r\n                const parsedData = JSON.parse(data);\r\n                const { success, ...restParsedData } = parsedData;\r\n\r\n                dispatch({ type: onMessage, payload: restParsedData });\r\n            };\r\n\r\n            socket.onclose = (event: any) => {\r\n                dispatch({ type: onClose, payload: event });\r\n            };\r\n\r\n            if (type === wsSendMessage) {\r\n            }\r\n        }\r\n\r\n        next(action);\r\n    };\r\n};","import {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_FAILED\r\n}\r\n    from '../action/Ingredients';\r\nimport { Tingredient } from '../types/ingredientsType'\r\ntype TgetIngredientsRequest = {\r\n    readonly type: typeof GET_INGREDIENTS_REQUEST\r\n}\r\ntype TingredientsSuccess = {\r\n    readonly type: typeof GET_INGREDIENTS_SUCCESS\r\n    ingredients: Tingredient[]\r\n}\r\ntype TingredientsFailed = {\r\n    readonly type: typeof GET_INGREDIENTS_FAILED\r\n}\r\ntype TingredientsAction =\r\n    TgetIngredientsRequest\r\n    | TingredientsSuccess\r\n    | TingredientsFailed;\r\n\r\n\r\n\r\ntype TingredientsState = {\r\n    ingredientsRequest: boolean;\r\n    ingredientsFailed: boolean;\r\n    ingredients: null | Tingredient[];\r\n}\r\n\r\nconst initialState: TingredientsState = {\r\n    ingredientsRequest: false,\r\n    ingredientsFailed: false,\r\n    ingredients: null\r\n}\r\nexport const reducerIngredients = (state = initialState, action: TingredientsAction) => {\r\n    switch (action.type) {\r\n        case GET_INGREDIENTS_REQUEST:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    ingredientsRequest: true,\r\n                    ingredientsFailed: false\r\n                }\r\n            }\r\n        case GET_INGREDIENTS_SUCCESS:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    ingredientsFailed: false,\r\n                    ingredients: action.ingredients,\r\n                    ingredientsRequest: false\r\n                }\r\n            }\r\n        case GET_INGREDIENTS_FAILED:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    ingredientsFailed: true,\r\n                    ingredientsRequest: false\r\n                }\r\n            }\r\n        default:\r\n            {\r\n                return state\r\n            }\r\n    }\r\n}","\r\nimport { OPEN_INGREDIENT_DETAILS, CLOSE_INGREDIENT_DETAILS } from '../action/IngredientDetail'\r\nimport { OPEN_ORDER_MODAL } from '../action/order';\r\nimport { Tingredient, TorderNumber } from '../types/ingredientsType';\r\nimport {OPEN_ORDER_CARD, CLOSE_ORDER_CARD, TcloseOrderCard, TopenOrderCard}  from '../action/orderCard';\r\ntype IingredientDetailRedce = {\r\n    modalOpen: boolean;\r\n    ingredient: Tingredient | null;\r\n    order:any,\r\n    orderCard:any\r\n}\r\ntype TopenIngredientDetals = {\r\n    readonly type: typeof OPEN_INGREDIENT_DETAILS\r\n    ingredient:Tingredient\r\n}\r\ntype TcloseIngredientDetails = {\r\n    readonly type: typeof CLOSE_INGREDIENT_DETAILS\r\n}\r\ntype TopenOrderModal = {\r\n    readonly type: typeof OPEN_ORDER_MODAL\r\n    order:TorderNumber\r\n}\r\ntype TingredientDetailsAction =\r\n    TopenIngredientDetals\r\n    |TcloseIngredientDetails\r\n    |TopenOrderModal\r\n    |TcloseOrderCard\r\n    |TopenOrderCard;\r\n\r\n\r\n\r\nconst initialState: IingredientDetailRedce = {\r\n    modalOpen: false,\r\n    ingredient: null,\r\n    order: null,\r\n    orderCard:null,\r\n\r\n}\r\nexport const reducerIngredientDetail = (state = initialState, action: TingredientDetailsAction) => {\r\n    switch (action.type) {\r\n        case OPEN_INGREDIENT_DETAILS:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    order: null,\r\n                    modalOpen: true,\r\n                    ingredient: action.ingredient\r\n                }\r\n            }\r\n        case OPEN_ORDER_MODAL:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    modalOpen: true,\r\n                    order: action.order\r\n                }\r\n            }\r\n        case CLOSE_INGREDIENT_DETAILS:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    modalOpen: false,\r\n                    ingredient: null,\r\n                    orderCard:null\r\n                }\r\n            }\r\n            case OPEN_ORDER_CARD: {\r\n                return {\r\n                    ...state,\r\n                    modalOpen: true,\r\n                    orderCard:action.orderCard\r\n                }\r\n            }\r\n            case CLOSE_ORDER_CARD: {\r\n                return {\r\n                    ...state,\r\n                    modalOpen: false,\r\n                    orderCard:null\r\n                }\r\n            }\r\n        default:\r\n            {\r\n                return state\r\n            }\r\n    }\r\n}","import {\r\n    ADD_INGREDIENT,\r\n    DELETE_INGREDIENT,\r\n    SORT_INGERDIENTS,\r\n    DELETE_BUN,\r\n    CLEAR_CONSTRUCTOR\r\n}\r\n    from '../action/constructorArray';\r\n    \r\nimport {ingredientsType} from '../constants'\r\nimport { Tingredient } from '../types/ingredientsType'\r\ntype TaddIngredient = {\r\n    readonly type: typeof ADD_INGREDIENT\r\n    ingredient:Tingredient\r\n}\r\ntype TdeleteIngredient = {\r\n    readonly type: typeof DELETE_INGREDIENT\r\n    ingredient:Tingredient\r\n}\r\ntype TdeleteBun = {\r\n    readonly type: typeof DELETE_BUN\r\n    bunInArray:Tingredient;\r\n}\r\ntype TsortIngredients = {\r\n    readonly type: typeof SORT_INGERDIENTS\r\n    dropIndex:number;\r\n    dragIndex:number;\r\n}\r\ntype TcleaConstructor = {\r\n    readonly type: typeof CLEAR_CONSTRUCTOR\r\n}\r\nexport type TconstructorArrayAction =\r\n    TaddIngredient\r\n    |TdeleteIngredient\r\n    |TdeleteBun\r\n    |TsortIngredients\r\n    |TcleaConstructor;\r\n\r\n\r\n\r\n\r\nexport type TarrayID = {\r\n    ingredientsInConstructor: Tingredient[]\r\n    arrayID: string[];\r\n}\r\nconst initialState: TarrayID = {\r\n    ingredientsInConstructor: [],\r\n    arrayID: []\r\n}\r\nexport const constructorArrayReducer = (state = initialState, action: TconstructorArrayAction) => {\r\n    switch (action.type) {\r\n        case ADD_INGREDIENT:\r\n            const uid = () => Date.now().toString(36) + Math.random().toString(36);\r\n            const idConstr = uid()\r\n            return {\r\n                ...state,\r\n                arrayID: [...state.arrayID.concat(action.ingredient._id)],\r\n                ingredientsInConstructor: [...state.ingredientsInConstructor, { ...action.ingredient, idConstr }]\r\n            }\r\n        case DELETE_INGREDIENT:\r\n            const filterId = () => {\r\n                return state.arrayID.findIndex((e) => e === action.ingredient._id)\r\n            }\r\n            const result = state.arrayID.slice()\r\n            result.splice(filterId(), 1)\r\n            return {\r\n                ...state,\r\n                arrayID: result,\r\n                ingredientsInConstructor: [...state.ingredientsInConstructor.filter((item) => item.idConstr !== action.ingredient.idConstr)]\r\n            }\r\n        case DELETE_BUN:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    ingredientsInConstructor: [...state.ingredientsInConstructor.filter((item) => item._id !== action.bunInArray._id)],\r\n                    arrayID: [...state.arrayID.filter((item) => item !== action.bunInArray._id)]\r\n                }\r\n            }\r\n        case SORT_INGERDIENTS:\r\n            {\r\n                const result = state.ingredientsInConstructor.slice().filter((item) =>\r\n                    item.type !== ingredientsType.bun);\r\n                result.splice(action.dropIndex, 0, result.splice(action.dragIndex, 1)[0]);\r\n                const result2 = state.ingredientsInConstructor.filter((item) =>\r\n                    item.type === ingredientsType.bun);\r\n                const result3 = result.concat(result2)\r\n                return {\r\n                    ...state,\r\n                    ingredientsInConstructor: result3\r\n                }\r\n            }\r\n        case CLEAR_CONSTRUCTOR: {\r\n            return {\r\n                ingredientsInConstructor: [],\r\n                arrayID: []\r\n            }\r\n        }\r\n\r\n        default:\r\n            {\r\n                return state\r\n            }\r\n    }\r\n}","import {\r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_SUCCESS,\r\n    GET_ORDER_FAILED,\r\n    ORDER_CLEANING,\r\n    TorderAction\r\n}\r\n    from '../action/order';\r\n\r\ntype TorderState = {\r\n    orederNumberRequest: boolean;\r\n    orderNumberFailed: boolean;\r\n    orederNumber: null | number;\r\n}\r\nconst initialState: TorderState = {\r\n    orederNumberRequest: false,\r\n    orderNumberFailed: false,\r\n    orederNumber: null\r\n}\r\nexport const orderReducer = (state = initialState, action:TorderAction) => {\r\n    switch (action.type) {\r\n        case GET_ORDER_REQUEST:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    orederNumberRequest: true,\r\n                    orderNumberFailed: false,\r\n                    orederNumber: null\r\n                }\r\n            }\r\n        case GET_ORDER_SUCCESS:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    orederNumberRequest: false,\r\n                    orederNumber: action.orederNumber\r\n                }\r\n            }\r\n        case GET_ORDER_FAILED:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    orderNumberFailed: true,\r\n                    orederNumberRequest: false,\r\n                }\r\n            }\r\n        case ORDER_CLEANING:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    orederNumber: null,\r\n                    orederNumberRequest: false,\r\n                    orderNumberFailed: false,\r\n                }\r\n            }\r\n        default:\r\n            { return state }\r\n    }\r\n\r\n}","import {\r\n    CHANGE_REGISTER_FORM_VALUE,\r\n    REGISTER_FORM_SUBMIT,\r\n    REGISTER_FORM_SUBMIT_SUCCESS,\r\n    REGISTER_FORM_SUBMIT_FAILED,\r\n    LOGOUT_USER,\r\n    fORGOT_FORM_SUBMIT,\r\n    fORGOT_FORM_SUCCESS,\r\n    fORGOT_FORM_FAILED,\r\n    fORGOT_FORM_CLEANING,\r\n    RESET_FORM_SUBMIT,\r\n    RESET_fORM_SUCCESS,\r\n    RESET_fORM_FAILED,\r\n    RESET_fORM_CLEANING,\r\n    GLOBAL_CLEANING_FORM,\r\n    TregisterFormAction\r\n} from '../action/registerForm';\r\ntype TreplyAutchData = {\r\n    success?: boolean;\r\n    accessToken?: string;\r\n    refreshToken?: string;\r\n    user?: {\r\n        email: string;\r\n        name: string\r\n    }\r\n}\r\ntype TregisterFormInitialState = {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n    emailForgot:string;\r\n    emailCode:string;\r\n    registrationRequest:boolean;\r\n    registrationFailed:boolean;\r\n    registrationSuccess:boolean;\r\n    registerReceivedData:any;\r\n    resetSuccess:boolean;\r\n    resetFailed:boolean;\r\n    forgotSuccess:boolean;\r\n    forgotFailed:boolean;\r\n}\r\n\r\nconst initialState:TregisterFormInitialState = {\r\n    email: '',\r\n    password: '',\r\n    name: '',\r\n    emailForgot: '',\r\n    emailCode: '',\r\n    registrationRequest: false,\r\n    registrationFailed: false,\r\n    registrationSuccess: false,\r\n    registerReceivedData: null,\r\n    resetSuccess: false,\r\n    resetFailed: false,\r\n    forgotSuccess: false,\r\n    forgotFailed: false,\r\n\r\n}\r\nexport const RegistrationReduser = (state = initialState, action: TregisterFormAction) => {\r\n    switch (action.type) {\r\n        case CHANGE_REGISTER_FORM_VALUE: {\r\n            return {\r\n                ...state,\r\n                [action.field]: action.value\r\n            }\r\n        }\r\n        case REGISTER_FORM_SUBMIT: {\r\n            return {\r\n                ...state,\r\n                registrationRequest: true,\r\n                registrationFailed: false,\r\n                registrationSuccess: false,\r\n            }\r\n        }\r\n        case REGISTER_FORM_SUBMIT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                email: '',\r\n                password: '',\r\n                name: '',\r\n                emailCode: '',\r\n                registrationRequest: false,\r\n                registerReceivedData: action.tokenData,\r\n                registrationSuccess: true,\r\n            }\r\n        }\r\n        case REGISTER_FORM_SUBMIT_FAILED: {\r\n            return {\r\n                ...state,\r\n                registrationRequest: false,\r\n                registrationFailed: true,\r\n                registrationSuccess: false,\r\n            }\r\n        }\r\n\r\n        case LOGOUT_USER: {\r\n            return {\r\n                ...state,\r\n                registrationRequest: false,\r\n                registrationFailed: false,\r\n                registerReceivedData: null,\r\n                registrationSuccess: false\r\n            }\r\n        }\r\n        case fORGOT_FORM_SUBMIT: {\r\n            return {\r\n                ...state,\r\n                registrationRequest: true,\r\n                forgotSuccess: false,\r\n                forgotFailed: false\r\n            }\r\n        }\r\n        case fORGOT_FORM_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                registrationRequest: false,\r\n                forgotSuccess: true,\r\n                forgotFailed: false\r\n            }\r\n        }\r\n        case fORGOT_FORM_FAILED: {\r\n            return {\r\n                ...state,\r\n                registrationRequest: false,\r\n                forgotSuccess: false,\r\n                forgotFailed: true\r\n            }\r\n        }\r\n        case fORGOT_FORM_CLEANING: {\r\n            return {\r\n                ...state,\r\n                emailForgot: '',\r\n                emailCode: '',\r\n            }\r\n        }\r\n        case RESET_FORM_SUBMIT: {\r\n            return {\r\n                ...state,\r\n                registrationRequest: true,\r\n                resetSuccess: false,\r\n                resetFailed: false\r\n            }\r\n        }\r\n        case RESET_fORM_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                registrationRequest: false,\r\n                resetSuccess: true,\r\n                resetFailed: false\r\n            }\r\n        }\r\n        case RESET_fORM_FAILED: {\r\n            return {\r\n                ...state,\r\n                registrationRequest: false,\r\n                resetSuccess: false,\r\n                resetFailed: true\r\n            }\r\n        }\r\n        case RESET_fORM_CLEANING: {\r\n            return {\r\n                ...state,\r\n                registrationRequest: false,\r\n                resetSuccess: false,\r\n                resetFailed: false,\r\n                password: '',\r\n                emailCode: ''\r\n            }\r\n        }\r\n        case GLOBAL_CLEANING_FORM: {\r\n            return {\r\n                ...state,\r\n                email: '',\r\n                password: '',\r\n                emailForgot: '',\r\n                emailCode: '',\r\n                name:'',\r\n                registrationFailed: false\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n    }\r\n}","import {\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_MESSAGE,\r\n    TwsOrdesAction\r\n}\r\n    from '../action/wsOrdes';\r\n    type ordersData = {\r\n        createdAt:string,\r\n        ingredients:any,\r\n        name:string,\r\n        number:number,\r\n        status:string,\r\n        updateAt:string,\r\n        _id:string,\r\n    }\r\n\r\ntype WSorders = {\r\n    wsConnected:boolean,\r\n    orders:any;\r\n    error:any;\r\n}\r\n\r\nconst initialState:WSorders = {\r\n    wsConnected: false,\r\n    orders: null,\r\n    error: undefined\r\n};\r\n\r\nexport const wsOrdesReducer = (state = initialState, action:TwsOrdesAction) => {\r\n    switch (action.type) {\r\n        case WS_CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                error: undefined,\r\n                wsConnected: true\r\n            };\r\n\r\n        case WS_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                error:action.payload,\r\n                wsConnected: false\r\n            };\r\n\r\n        case WS_CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                error: undefined,\r\n                wsConnected: false,\r\n                orders: null\r\n            };\r\n\r\n        case WS_GET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                error: undefined,\r\n                orders: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import {  combineReducers, } from 'redux';\r\nimport { reducerIngredients, } from './Ingredients';\r\nimport { reducerIngredientDetail } from './IngredientDetail'\r\nimport { constructorArrayReducer } from './constructorArray'\r\nimport { orderReducer } from './oreder'\r\nimport {RegistrationReduser} from './registerForm';\r\nimport {wsOrdesReducer} from './wsOrders'\r\nexport const rootReducer = combineReducers({\r\n    ingredients: reducerIngredients,\r\n    ingredientDetail: reducerIngredientDetail,\r\n    arrayInConstructor: constructorArrayReducer,\r\n    order: orderReducer,\r\n    registrationForm: RegistrationReduser,\r\n    wsOrdes:wsOrdesReducer\r\n})\r\n export  default rootReducer","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport { rootReducer } from './reducers/index';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {socketMiddleware} from '../services/middleware/socketMiddleware';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {\r\n    WS_CONNECTION_CLOSED,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_GET_MESSAGE,\r\n    WS_SEND_MESSAGE\r\n  } from './action/wsOrdes';\r\n  \r\nimport thunk from 'redux-thunk';\r\nconst wsActions = {\r\n    wsInit: WS_CONNECTION_START,\r\n    wsSendMessage: WS_SEND_MESSAGE,\r\n    onOpen: WS_CONNECTION_SUCCESS,\r\n    onClose: WS_CONNECTION_CLOSED,\r\n    onError: WS_CONNECTION_ERROR,\r\n    onMessage: WS_GET_MESSAGE\r\n  };\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst enhancer = composeWithDevTools(applyMiddleware(thunk, socketMiddleware(wsActions)));\r\nexport const store = createStore(rootReducer, enhancer);\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter} from 'react-router-dom';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from '../src/services/store';\r\nimport { Provider } from 'react-redux';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"burgerIngredients_ingredients__3f75l\",\"lists\":\"burgerIngredients_lists__2iiDc\",\"card_list\":\"burgerIngredients_card_list__3HecX\",\"card_price_box\":\"burgerIngredients_card_price_box__ArkDf\",\"picture\":\"burgerIngredients_picture__3CfkX\",\"box_with_ingredients\":\"burgerIngredients_box_with_ingredients__2ij24\",\"liks_style\":\"burgerIngredients_liks_style__33EJb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"picture\":\"ingredientDetails_picture__2vQLC\",\"name\":\"ingredientDetails_name__1nIsM\",\"сomposition\":\"ingredientDetails_сomposition__26i61\",\"сomposition_list_box\":\"ingredientDetails_сomposition_list_box__1UOlb\",\"main\":\"ingredientDetails_main__3PLOV\",\"title\":\"ingredientDetails_title__35NNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"appHeader_header__LY2mM\",\"logo_box\":\"appHeader_logo_box__2YzYB\",\"menu\":\"appHeader_menu__3Un8d\",\"menu_link\":\"appHeader_menu_link__lKW3b\",\"link_style\":\"appHeader_link_style__FJHy3\",\"link_style_active\":\"appHeader_link_style_active__29kfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor\":\"burgerConstructor_constructor__2nXqI\",\"open_elements\":\"burgerConstructor_open_elements__16V86\",\"lock_elements\":\"burgerConstructor_lock_elements__pjpry\",\"price_container\":\"burgerConstructor_price_container__2W6Uz\",\"price_text\":\"burgerConstructor_price_text__1AnB4\",\"open_elements_box\":\"burgerConstructor_open_elements_box__3FM_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"orderDetails_main__k-bZm\",\"picture\":\"orderDetails_picture__qGCAS\",\"position_center\":\"orderDetails_position_center__wqKVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_container\":\"modal_modal_container__Hdjkm\",\"modal_container_height_718\":\"modal_modal_container_height_718__1yd3j\",\"modal_container_height_539\":\"modal_modal_container_height_539__1cWfH\",\"modal_btn_close\":\"modal_modal_btn_close__1fPZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card__list\":\"cardsOrders_card__list__3aNYx\",\"box_cards\":\"cardsOrders_box_cards__XGiub\",\"card\":\"cardsOrders_card__hSnmI\",\"card__number_box\":\"cardsOrders_card__number_box__3yVhX\",\"card__bottom_box\":\"cardsOrders_card__bottom_box__3p3yv\",\"card__picture_box\":\"cardsOrders_card__picture_box__37UKw\",\"card__picture\":\"cardsOrders_card__picture__mV5C5\",\"card_picture_last\":\"cardsOrders_card_picture_last__M1onS\",\"card_picture_number_box\":\"cardsOrders_card_picture_number_box__2DRcD\",\"card_picture_number_text\":\"cardsOrders_card_picture_number_text__3cj6t\",\"card__price_box\":\"cardsOrders_card__price_box__3M4EA\",\"card__price\":\"cardsOrders_card__price__1hfX-\",\"card__liks_style\":\"cardsOrders_card__liks_style__10CP8\",\"details_main\":\"cardsOrders_details_main__2cGmg\",\"details_main_popap\":\"cardsOrders_details_main_popap__SM27C\",\"details_bottom_box\":\"cardsOrders_details_bottom_box__1Uy0i\",\"details_box_price\":\"cardsOrders_details_box_price__n1tr-\",\"details_number_order\":\"cardsOrders_details_number_order__1mjP_\",\"details_list_ingredient\":\"cardsOrders_details_list_ingredient__22HiI\",\"details_ingredient_price_box\":\"cardsOrders_details_ingredient_price_box__2g9Cf\",\"details_lists\":\"cardsOrders_details_lists__Z2mAz\",\"details_status_text\":\"cardsOrders_details_status_text__1lMn3\",\"details_name\":\"cardsOrders_details_name__3rwjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"mainBlock_main__ay27E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_overlay\":\"modalOverlay_modal_overlay__3Oxb6\"};"],"sourceRoot":""}